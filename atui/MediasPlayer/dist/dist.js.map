{
  "version": 3,
  "sources": ["../src/main.js"],
  "sourcesContent": ["/*!\n * ATUI v0.4.0 (https://github.com/alcapitan/atui)\n * This code is released under GNU General Public License (https://github.com/alcapitan/atui/blob/dev/LICENSE.md)\n */\n\n/* Metadata */\n\nconst atuiMediasplayer_Metadata = {\n    name: \"Medias Player\",\n    author: \"alcapitan (on GitHub)\",\n    version: \"v0.4.0\",\n    website: \"https://github.com/alcapitan/atui\",\n    in_development: true,\n};\n// atuiKernel_MetadataDisplay(atuiMediasplayer_Metadata);\n\n/* Close Audioplayer */\n\ndocument.querySelectorAll(\".atuiMediasplayer_Close\").forEach(function (button) {\n    button.addEventListener(\"click\", function () {\n        const player = findElement(\n            this,\n            \".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\",\n            \".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\"\n        );\n        const media = player.querySelector(\"audio, video\");\n        media.pause();\n        player.style.display = \"none\";\n    });\n});\n\n/* Assign an audio to an audioplayer */\n\nfunction atuiMediasplayer_Assign(data) {\n    const player = document.getElementById(data[\"player\"]);\n    const media = player.querySelector(\"audio, video\");\n    const cover = player.querySelector(\".atuiMediasplayer_Cover img\");\n    const title = player.querySelector(\".atuiMediasplayer_InformationTitle\");\n    const author = player.querySelector(\".atuiMediasplayer_InformationAuthor\");\n    const albumName = player.querySelector(\".atuiMediasplayer_InformationAlbumName\");\n    const releaseDate = player.querySelector(\".atuiMediasplayer_InformationReleaseDate\");\n    const origin = player.querySelector(\".atuiMediasplayer_InformationOrigin\");\n\n    media.setAttribute(\"src\", data[\"media\"]);\n    if (data[\"cover\"] !== undefined) {\n        cover.setAttribute(\"src\", data[\"cover\"]);\n    }\n    if (data[\"title\"] !== undefined) {\n        title.innerHTML = data[\"title\"];\n    }\n    if (data[\"author\"] !== undefined) {\n        author.innerHTML = data[\"author\"];\n    }\n    if (data[\"albumName\"] !== undefined) {\n        albumName.innerHTML = data[\"albumName\"];\n    }\n    if (data[\"releaseDate\"] !== undefined) {\n        releaseDate.innerHTML = data[\"releaseDate\"];\n    }\n    if (data[\"origin\"] !== undefined) {\n        origin.setAttribute(\"href\", data[\"origin\"]);\n    }\n}\n\n/* Play and pause a media */\n\ndocument.querySelectorAll(\".atuiMediasplayer_Run\").forEach(function (button) {\n    button.addEventListener(\"click\", function () {\n        let media;\n        if (this.getAttribute(\"data-mp-target\") !== null) {\n            media = document.querySelector(\n                `${this.getAttribute(\"data-mp-target\")} audio, ${this.getAttribute(\"data-mp-target\")} video`\n            );\n            button = findElement(\n                media,\n                \".atuiMediasplayer_Run\",\n                \".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\"\n            );\n            if (this.getAttribute(\"data-mp-assign\") !== null) {\n                data = JSON.parse(this.getAttribute(\"data-mp-assign\"));\n                atuiMediasplayer_Assign(data);\n            }\n        } else {\n            media = findElement(this, \"audio, video\", \".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\");\n            button = this;\n        }\n        if (media.paused === true) {\n            stopAllMedia();\n            media.play();\n            const player = findElement(\n                media,\n                \".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\",\n                \".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\"\n            );\n            if (window.getComputedStyle(player).display === \"none\") {\n                player.style.display = \"block\";\n            }\n            button.setAttribute(\"src\", \"atui/MediasPlayer/assets/pause.png\");\n            button.setAttribute(\"alt\", \"Pause the media\");\n        } else if (media.paused === false) {\n            media.pause();\n            button.setAttribute(\"src\", \"atui/MediasPlayer/assets/play.png\");\n            button.setAttribute(\"alt\", \"Play the media\");\n        } else {\n            console.error(\"An unexpected error has occurred.\");\n        }\n    });\n});\n\n/* Manage when audio ends */\n\ndocument.querySelectorAll(\".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\").forEach((player) => {\n    const button = player.querySelector(\".atuiMediasplayer_Run\");\n    const media = player.querySelector(\"audio, video\");\n    media.addEventListener(\"ended\", () => {\n        button.setAttribute(\"src\", \"atui/MediasPlayer/assets/play.png\");\n        button.setAttribute(\"alt\", \"Play the media.\");\n        if (player.classList.contains(\"optionFloating\")) {\n            player.style.display = \"none\";\n        }\n    });\n});\n\n/* Stop all others medias when playing a new one */\n\nfunction stopAllMedia() {\n    const medias = document.querySelectorAll(\"audio, video\");\n    medias.forEach(function (media) {\n        media.pause();\n    });\n    document.querySelectorAll(\".atuiMediasplayer_Run\").forEach(function (button) {\n        button.setAttribute(\"src\", \"atui/MediasPlayer/assets/play.png\");\n        button.setAttribute(\"alt\", \"Play the audio.\");\n    });\n}\n\n/* Update timer */\n\ndocument.querySelectorAll(\".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\").forEach((player) => {\n    const media = player.querySelector(\"audio, video\");\n    const timer = player.querySelector(\".atuiMediasplayer_Timer\");\n    const progressBar = player.querySelector(\".atuiMediasplayer_ProgressbarInside\");\n    media.addEventListener(\"timeupdate\", () => {\n        let listened = media.currentTime;\n        let duration = media.duration;\n        if (isNaN(duration)) {\n            (listened = 0), (duration = 0);\n        }\n        const percent = Math.round((listened / duration) * 100);\n        timer.innerText = `${convertTime(listened)} - ${convertTime(duration)}`;\n        progressBar.style.width = `${percent}%`;\n    });\n});\n\n/* Go forward or backward */\n\ndocument.querySelectorAll(\".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\").forEach((player) => {\n    const backward = player.querySelector(\".atuiMediasplayer_Backward\");\n    const forward = player.querySelector(\".atuiMediasplayer_Forward\");\n    const media = player.querySelector(\"audio, video\");\n    backward.addEventListener(\"click\", () => {\n        media.currentTime -= 10;\n    });\n    forward.addEventListener(\"click\", () => {\n        media.currentTime += 10;\n    });\n});\n\n/* Change playback */\n\ndocument.querySelectorAll(\".atuiMediasplayer_Progressbar\").forEach((progressbar) => {\n    progressbar.addEventListener(\"click\", (event) => {\n        const media = findElement(\n            progressbar,\n            \"audio, video\",\n            \".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\"\n        );\n        const percent = (event.offsetX / progressbar.offsetWidth) * 100;\n        media.currentTime = (media.duration * percent) / 100;\n        progressbar.querySelector(\".atuiMediasplayer_ProgressbarInside\").style.width = `${percent}%`;\n    });\n});\n\n/* Infos */\n\ndocument.querySelectorAll(\".atuiMediasplayer_Infos\").forEach(function (button) {\n    button.addEventListener(\"mouseenter\", function () {\n        atuiKernel_ToolsContextmenuDisplay(this, true, false);\n    });\n    button.addEventListener(\"mouseleave\", function () {\n        atuiKernel_ToolsContextmenuDisplay(this, false, undefined);\n    });\n});\n\n/* Loop */\n\ndocument.querySelectorAll(\".atuiMediasplayer_Loop\").forEach(function (button) {\n    button.addEventListener(\"click\", function () {\n        const media = findElement(this, \"audio, video\", \".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\");\n        if (media.loop === false) {\n            media.loop = true;\n            this.setAttribute(\"src\", \"atui/MediasPlayer/assets/no_loop.png\");\n            this.setAttribute(\"alt\", \"Stop playing the media in a loop\");\n        } else if (media.loop === true) {\n            media.loop = false;\n            this.setAttribute(\"src\", \"atui/MediasPlayer/assets/loop.png\");\n            this.setAttribute(\"alt\", \"Play the media in a loop\");\n        } else {\n            console.error(\"An unexpected error has occurred.\");\n        }\n    });\n});\n\n/* Sound */\n\ndocument.querySelectorAll(\".atuiMediasplayer_Sound\").forEach(function (button) {\n    button.addEventListener(\"click\", function () {\n        const media = findElement(this, \"audio, video\", \".atuiMediasplayer_Audioplayer, .atuiMediasplayer_Videoplayer\");\n        if (media.muted === false) {\n            media.muted = true;\n            this.setAttribute(\"src\", \"atui/MediasPlayer/assets/no_sound.png\");\n            this.setAttribute(\"alt\", \"Mute sound.\");\n        } else if (media.muted === true) {\n            media.muted = false;\n            this.setAttribute(\"src\", \"atui/MediasPlayer/assets/sound.png\");\n            this.setAttribute(\"alt\", \"Enable sound.\");\n        } else {\n            console.error(\"An unexpected error has occurred.\");\n        }\n    });\n});\n\n/* Fullscreen */\n\ndocument.querySelectorAll(\".atuiMediasplayer_Fullscreen\").forEach((button) => {\n    button.addEventListener(\"click\", () => {\n        const media = findElement(button, \"video\", \".atuiMediasplayer_Videoplayer\");\n        if (media.requestFullscreen) {\n            media.requestFullscreen();\n        } else if (media.webkitRequestFullscreen) {\n            media.webkitRequestFullscreen();\n        } else {\n            console.error(\"The browser does not support fullscreen mode.\");\n            return;\n        }\n    });\n});\n\n/* Picture in picture */\n\ndocument.querySelectorAll(\".atuiMediasplayer_Pip\").forEach((button) => {\n    button.addEventListener(\"click\", () => {\n        const media = findElement(button, \"video\", \".atuiMediasplayer_Videoplayer\");\n        if (media !== document.pictureInPictureElement) {\n            media.requestPictureInPicture();\n        } else {\n            document.exitPictureInPicture();\n        }\n    });\n});\n"],
  "mappings": "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",
  "names": ["atuiMediasplayer_Metadata", "name", "author", "version", "website", "in_development", "document", "querySelectorAll", "forEach", "button", "addEventListener", "player", "findElement", "querySelector", "pause", "style", "display", "atuiMediasplayer_Assign", "data", "getElementById", "media", "cover", "title", "albumName", "releaseDate", "origin", "setAttribute", "undefined", "innerHTML", "getAttribute", "JSON", "parse", "paused", "stopAllMedia", "play", "window", "getComputedStyle", "console", "error", "classList", "contains", "timer", "progressBar", "listened", "currentTime", "duration", "isNaN", "percent", "Math", "round", "innerText", "convertTime", "width", "backward", "forward", "progressbar", "event", "offsetX", "offsetWidth", "atuiKernel_ToolsContextmenuDisplay", "loop", "muted", "requestFullscreen", "webkitRequestFullscreen", "pictureInPictureElement", "requestPictureInPicture", "exitPictureInPicture"]
}
