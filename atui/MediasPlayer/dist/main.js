"use strict";document.querySelectorAll(".mpClose").forEach(function(a){a.addEventListener("click",function(){const a=vkClosest(this,".mpAudio, .mpVideo",".mpAudio, .mpVideo")[0],b=a.querySelector("audio, video");b.pause(),a.style.display="none"})});function mpAssign(a){if(void 0===a.player)return console.error("The player attribute is required."),!1;const b=document.querySelector(a.player);if(null===b)return console.error(`The player "${a.player}" has not been found in this webpage.`),!1;if(void 0===a.media)return console.error("The media attribute is required."),!1;const c=b.querySelector("audio, video");if(null===c)return console.error(`The player ${a.player} does not have any audio or video tag.`),!1;if(c.setAttribute("src",a.media),"AUDIO"===c.tagName){const c=b.querySelector(".mpMediaPicture img, .mpMediaPicture i");if(null===c&&void 0!==a.picture)return console.error(`The player ${a.player} does not have any album cover element.`),!1;c.setAttribute("src",void 0===a.picture?"https://unpkg.com/@tabler/icons/icons/disc.svg":a.picture)}else"VIDEO"===c.tagName&&c.setAttribute("poster",void 0===a.picture?"":a.picture);const d=b.querySelector(".mpMediaTitle");if(null===d&&void 0!==a.title)return console.error(`The player ${a.player} does not have any title element.`),!1;null!==d&&(d.innerHTML=void 0===a.title?"":a.title);const e=b.querySelector(".mpMediaDescription");if(null===e&&void 0!==a.description)return console.error(`The player ${a.player} does not have any description element.`),!1;null!==e&&(e.innerHTML=void 0===a.description?"":a.description);const f=b.querySelector(".mpMediaSource");if(null===f&&void 0!==a.source)return console.error(`The player ${a.player} does not have any source element.`),!1;null!==f&&(void 0===a.source?f.style.display="none":(f.setAttribute("href",a.source),f.style.display="inherit"));const g=b.querySelector(".mpMediaDate");if(null===g&&void 0!==a.date)return console.error(`The player ${a.player} does not have any date element.`),!1;null!==g&&(void 0===a.date?g.style.display="none":(g.innerHTML=a.date,g.style.display="inherit"));const h=b.querySelector(".mpMediaPlaylist");if(null===h&&void 0!==a.playlist)return console.error(`The player ${a.player} does not have any playlist element.`),!1;null!==h&&(void 0===a.playlist?h.style.display="none":(h.setAttribute("href",a.playlist),h.style.display="inherit"));const i=b.querySelector(".mpMediaAuthor");return null===i&&void 0!==a.author?(console.error(`The player ${a.player} does not have any author element.`),!1):(null!==i&&(void 0===a.author?i.style.display="none":(i.innerHTML=a.author,i.style.display="inherit")),!0)}function mpRaiseError(a,b){const c=document.createElement("div");c.classList.add("vkBox","styleDanger");const d=document.createElement("i");d.classList.add("ti","ti-circle-x"),c.appendChild(d);const e=document.createElement("p");e.innerHTML=b,c.appendChild(e),a.classList.contains("mpVideo")?(a.querySelector("article").prepend(c),media.setAttribute("poster","")):a.prepend(c)}document.querySelectorAll(".mpAudio, .mpVideo").forEach(a=>{const b=a.querySelector("audio, video");b.addEventListener("error",()=>{a.querySelectorAll(".vkBox.styleDanger").forEach(a=>{a.remove()});let b=`ERROR : `;switch(error.code){case 1:b+=`Media loading has been interrupted by the user. `;break;case 2:b+=`Media loading was interrupted due to a network problem. `;break;case 3:b+=`Media cannot be read due to a file decoding error. `;break;case 4:b+=`Media has not been found. `;break;default:b+=`An unexpected error has occurred. `}const c=a.querySelector("audio, video").getAttribute("src");b+=`<hr /><small>Media link : <code>${c}</code></small>`,b+=`<br /><small>Technical error: <code>${error.code} ${error.message}</code></small>`,mpRaiseError(a,b)})});function mpRun(a){const b=document.querySelector(a),c=b.querySelector("audio, video"),d=b.querySelector(".mpRun");if(null===c.getAttribute("src")){let c=`ERROR : This player ${a} does not have any media assigned.`;return c+=`<hr /><small>MediaPlayer querySelector : <code>${a}</code></small>`,mpRaiseError(b,c),0}!0===c.paused?(mpStop(),c.play(),"none"===window.getComputedStyle(b).display&&(b.style.display="block"),d.classList.replace("ti-player-play","ti-player-pause")):!1===c.paused?(c.pause(),d.classList.replace("ti-player-pause","ti-player-play")):console.error("An unexpected error has occurred.")}document.querySelectorAll(".mpAudio, .mpVideo").forEach(a=>{a.querySelector(".mpRun").addEventListener("click",()=>{mpRun(`#${a.getAttribute("id")}`)})}),document.querySelectorAll(".mpAudio, .mpVideo").forEach(a=>{const b=a.querySelector(".mpRun"),c=a.querySelector("audio, video");c.addEventListener("ended",()=>{b.classList.replace("ti-player-pause","ti-player-play"),a.classList.contains("styleFloating")&&(a.style.display="none")})});function mpStop(){const a=document.querySelectorAll("audio, video");a.forEach(function(a){a.pause()}),document.querySelectorAll(".mpRun").forEach(function(a){a.classList.replace("ti-player-pause","ti-player-play")})}document.querySelectorAll(".mpAudio, .mpVideo").forEach(a=>{const b=a.querySelector("audio, video"),c=a.querySelector(".mpTimer"),d=a.querySelector(".mpProgressInside");b.addEventListener("timeupdate",()=>{let a=b.currentTime,e=b.duration;isNaN(e)&&(a=e=0);const f=Math.round(100*(a/e));c.innerText=`${convertTime(a)} - ${convertTime(e)}`,d.style.width=`${f}%`})}),document.querySelectorAll(".mpAudio, .mpVideo").forEach(a=>{const b=a.querySelector(".mpBackward"),c=a.querySelector(".mpForward"),d=a.querySelector("audio, video");b.addEventListener("click",()=>{d.currentTime-=10}),c.addEventListener("click",()=>{d.currentTime+=10})}),document.querySelectorAll(".mpProgress").forEach(a=>{a.addEventListener("click",b=>{const c=vkClosest(a,"audio, video",".mpAudio, .mpVideo")[0],d=100*(b.offsetX/a.offsetWidth);c.currentTime=c.duration*d/100,a.querySelector(".mpProgressInside").style.width=`${d}%`})}),document.querySelectorAll(".mpLoop").forEach(function(a){a.addEventListener("click",function(){const a=vkClosest(this,"audio, video",".mpAudio, .mpVideo")[0];!1===a.loop?(a.loop=!0,this.classList.replace("ti-repeat","ti-repeat-off")):!0===a.loop?(a.loop=!1,this.classList.replace("ti-repeat-off","ti-repeat")):console.error("An unexpected error has occurred.")})}),document.querySelectorAll(".mpSound").forEach(function(a){a.addEventListener("click",function(){const a=vkClosest(this,"audio, video",".mpAudio, .mpVideo")[0];!1===a.muted?(a.muted=!0,this.classList.replace("ti-volume","ti-volume-off")):!0===a.muted?(a.muted=!1,this.classList.replace("ti-volume-off","ti-volume")):console.error("An unexpected error has occurred.")})}),document.querySelectorAll(".mpFullscreen").forEach(a=>{a.addEventListener("click",()=>{const b=vkClosest(a,"video",".mpVideo")[0];b.requestFullscreen?b.requestFullscreen():b.webkitRequestFullscreen?b.webkitRequestFullscreen():console.error("The browser does not support fullscreen mode.")})}),document.querySelectorAll(".mpPip").forEach(a=>{a.addEventListener("click",()=>{const b=vkClosest(a,"video",".mpVideo")[0];b===document.pictureInPictureElement?document.exitPictureInPicture():b.requestPictureInPicture()})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,