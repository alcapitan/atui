@use "sass:list";

/* * SASS colors plans 
 * STANDARD
 * N00 A20 - Content
 * transparent - Background
 * N80 A80 - Hover
 * N60 A60 - Active
 * 
 * FILLED
 * NFF AFF - Content
 * N00 A40 - Background
 * N20 A60 - Hover
 * N40 A80 - Active
 * 
 * TINTED
 * N20 A20 - Content
 * N80 A80 - Background
 * N60 A60 - Hover
 * N40 A40 - Active
 * 
 * OUTLINE
 * N00 A40 - Content
 * transparent - Background
 * N20 A60 - Hover
 * N40 A80 - Active
 *
 */

$colors: (
    (("00", null, "80", "60"), ("20", null, "80", "60")),
    (("FF", "00", "20", "40"), ("FF", "40", "60", "80")),
    (("20", "80", "60", "40"), ("20", "80", "60", "40")),
    (("00", null, "20", "40"), ("40", null, "60", "80"))
);
$notDisabled: ":not(:is(:disabled, .optionDisabled))";
$colorOptions: (
    "": "N",
    ".optionAccent": "A",
    ".optionDanger": "D",
    ".optionWarning": "W",
    ".optionSuccess": "S",
    ".optionInfo": "I",
);

@function getColor($i, $j, $k) {
    @return #{list.nth(list.nth(list.nth($colors, $i), $j), $k)};
}

/* ! SASS will give to separators the content's color */

/* Global */

.vkButton {
    margin: 10px;
    padding: 10px 20px;
    display: inline-flex;
    align-items: center;
    gap: 10px;
    border-radius: var(--vkBorderRadius);
    border: none;
    background-color: transparent;
    vertical-align: middle;
}

.vkButton :is(i, img) {
    font-size: 1em;
    width: 1em;
    height: 1em;
}

/* Disabled */

.vkButton:is(:disabled, .optionDisabled) {
    opacity: 0.5;
}

/* Pill */

.vkButton.optionPill {
    border-radius: 21px;
}

/* Empty */

.vkButton:not(:has(*)) {
    height: 42px;
}

.vkButton.optionEmpty,
.vkButton:empty
/* Necessary duplication otherwise Firefox doesn't work  */ {
    height: 42px;
}

/* Standard */

.vkButton,
.vkButton * {
    font-size: 1rem;
}

@each $option, $prefix in $colorOptions {
    .vkButton#{$option},
    .vkButton#{$option} * {
        @if $option == "" {
            color: hsl(var(--vkColor#{$prefix}#{getColor(1, 1, 1)}));
        } @else {
            color: hsl(var(--vkColor#{$prefix}#{getColor(1, 2, 1)}));
        }
    }
}

/* Standard separator */

.vkButton hr {
    border: 0;
    width: 1px;
    height: 1em;
}

@each $option, $prefix in $colorOptions {
    .vkButton#{$option} hr {
        @if $option == "" {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(1, 1, 1)}));
        } @else {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(1, 2, 1)}));
        }
    }

    .vkButton#{$option}#{$notDisabled}:hover {
        @if $option == "" {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(1, 1, 3)}));
        } @else {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(1, 2, 3)}));
        }
    }

    .vkButton#{$option}#{$notDisabled}:active {
        @if $option == "" {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(1, 1, 4)}));
        } @else {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(1, 2, 4)}));
        }
    }
}

/* Filled */

@each $option, $prefix in $colorOptions {
    .vkButton.optionFilled#{$option} {
        @if $option == "" {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(2, 1, 2)}));
        } @else {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(2, 2, 2)}));
        }
    }

    .vkButton.optionFilled#{$option}#{$notDisabled}:hover {
        @if $option == "" {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(2, 1, 3)}));
        } @else {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(2, 2, 3)}));
        }
    }

    .vkButton.optionFilled#{$option}#{$notDisabled}:active {
        @if $option == "" {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(2, 1, 4)}));
        } @else {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(2, 2, 4)}));
        }
    }
}

.vkButton.optionFilled,
.vkButton.optionFilled * {
    color: hsl(var(--vkColorN#{getColor(2, 1, 1)})); // stylelint-disable-line custom-property-pattern
}

.vkButton.optionFilled hr {
    background-color: hsl(var(--vkColorN#{getColor(2, 1, 1)})); // stylelint-disable-line custom-property-pattern
}

/* Tinted */

@each $option, $prefix in $colorOptions {
    .vkButton.optionTinted#{$option},
    .vkButton.optionTinted#{$option} * {
        @if $option == "" {
            color: hsl(var(--vkColor#{$prefix}#{getColor(3, 1, 1)}));
        } @else {
            color: hsl(var(--vkColor#{$prefix}#{getColor(3, 2, 1)}));
        }
    }

    .vkButton.optionTinted#{$option} {
        @if $option == "" {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(3, 1, 2)}));
        } @else {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(3, 2, 2)}));
        }
    }

    .vkButton.optionTinted#{$option}#{$notDisabled}:hover {
        @if $option == "" {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(3, 1, 3)}));
        } @else {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(3, 2, 3)}));
        }
    }

    .vkButton.optionTinted#{$option}#{$notDisabled}:active {
        @if $option == "" {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(3, 1, 4)}));
        } @else {
            background-color: hsl(var(--vkColor#{$prefix}#{getColor(3, 2, 4)}));
        }
    }
}

/* Outlined */

.vkButton.optionOutlined {
    border-width: 2px;
    border-style: solid;
}

@each $option, $prefix in $colorOptions {
    .vkButton.optionOutlined#{$option} {
        @if $option == "" {
            border-color: hsl(var(--vkColor#{$prefix}#{getColor(4, 1, 1)}));
        } @else {
            border-color: hsl(var(--vkColor#{$prefix}#{getColor(4, 2, 1)}));
        }
    }

    .vkButton.optionOutlined#{$option}#{$notDisabled}:hover {
        @if $option == "" {
            border-color: hsl(var(--vkColor#{$prefix}#{getColor(4, 1, 3)}));
        } @else {
            border-color: hsl(var(--vkColor#{$prefix}#{getColor(4, 2, 3)}));
        }
    }

    .vkButton.optionOutlined#{$option}#{$notDisabled}:active {
        @if $option == "" {
            border-color: hsl(var(--vkColor#{$prefix}#{getColor(4, 1, 4)}));
        } @else {
            border-color: hsl(var(--vkColor#{$prefix}#{getColor(4, 2, 4)}));
        }
    }
}
