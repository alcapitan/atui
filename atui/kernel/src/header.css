/*!
 * ATUI v0.4.2 (https://github.com/alcapitan/atui)
 * This code is released under GNU General Public License (https://github.com/alcapitan/atui/blob/dev/LICENSE.md)
 */

/* Global */

.atuiKernel_Header {
    background-color: hsl(var(--atuiKernel_Color-N90));
    position: relative;
    width: available;
    width: stretch;
    z-index: 12;
    padding: 0 5px;
    border-bottom: 1px solid hsl(var(--atuiKernel_Color-N80));
}

.atuiKernel_Header * {
    margin: 0;
}

.atuiKernel_Header :is(i, img) {
    font-size: 2.25rem;
    width: 2.25rem;
    height: 2.25rem;
}

.atuiKernel_Header a:is(:hover, :active) {
    text-decoration: none;
}

/* Separators */

.atuiKernel_HeaderSpace {
    flex: 1;
    border: none;
}

.atuiKernel_HeaderSplit {
    border: 0;
    background-color: hsl(var(--atuiKernel_Color-N20));
    width: 1px !important;
    height: 1.875rem;
    padding: 0 !important;
}

/* Display on specific devices */

@media (1024px <= width) /* Computers */ {
    .atuiKernel_Header *.optionHideOnDesktop {
        display: none;
    }
}

@media (480px <= width < 1024px) /* Tablets */ {
    .atuiKernel_Header *.optionHideOnTablet {
        display: none;
    }
}

@media (width < 480px) /* Smartphones */ {
    .atuiKernel_Header *.optionHideOnPhone {
        display: none;
    }
}

/* Options */

.atuiKernel_Header.optionCarousel {
    position: absolute;
    background-color: hsl(var(--atuiKernel_Color-N90) / 80%);
    backdrop-filter: var(--atuiKernel_Blur);
}

.atuiKernel_Header.optionFixed {
    position: fixed;
}

.atuiKernel_Header.optionDark * {
    color: hsl(var(--atuiKernel_Color-NFF));
}

.atuiKernel_Header.optionAccent {
    background-color: hsl(var(--atuiKernel_Color-A90));
    border-bottom-color: hsl(var(--atuiKernel_Color-A80));
}

.atuiKernel_Header.optionAccent .atuiKernel_HeaderSplit {
    background-color: hsl(var(--atuiKernel_Color-A40));
}

.atuiKernel_Header.optionDark {
    background-color: hsl(var(--atuiKernel_Color-N20));
}

.atuiKernel_Header.optionDark .atuiKernel_HeaderSplit {
    background-color: hsl(var(--atuiKernel_Color-N80));
}

.atuiKernel_Header.optionTransparent {
    background-color: transparent;
    border-bottom: none;
    backdrop-filter: none;
}

/* Levels */

.atuiKernel_Header > div {
    display: flex;
    align-items: center;
    column-gap: 5px;
    justify-content: space-around;
    flex-wrap: wrap;
}

.atuiKernel_Header > div > * {
    padding: 5px;
    display: flex;
    align-items: center;
    gap: 5px;
    width: max-content;
}

.atuiKernel_Header > div.optionLevelLink :is(i, img) {
    font-size: 1.125rem;
    width: 1.125rem;
    height: 1.125rem;
}

/* 
 * div.optionScrollable can work only with div.optionCarousel and div.optionFixed
 TODO: make a Header's container with JS visual patch which set the height equal to the Header's height
 */
.atuiKernel_Header > div.optionScrollable {
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    justify-content: unset;
    flex-wrap: nowrap;
}

.atuiKernel_Header > div.optionScrollable > * {
    flex: 0 0 max-content;
    scroll-snap-align: start;
}
