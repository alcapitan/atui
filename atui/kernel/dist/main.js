"use strict";const vkVersion="0.4.2";document.querySelectorAll(".vkLicensingAtui").forEach(a=>{a.setAttribute("href","https://github.com/alcapitan/atui/"),a.setAttribute("target","_blank"),a.textContent=`This website is powered by ATUI v${vkVersion}.`});function vkLicensingPrint(){console.info(`This website is powered by ATUI v${vkVersion} (https://github.com/alcapitan/atui).`)}vkLicensingPrint();function vkClosest(a,b){let c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;return 1===a.querySelectorAll(b).length?[a.querySelector(b)]:1<a.querySelectorAll(b).length?Array.from(a.querySelectorAll(b)):Array.from(document.querySelectorAll(b)).includes(a)?[a]:Array.from(document.querySelectorAll(c)).includes(a)?(console.error(`No "${b}" element was found in "${c}".`),[]):null===a.parentNode?(console.error(`No "${b}" element was found in the webpage.`),[]):vkClosest(a.parentNode,b,c)}async function verifyLink(a){const b=await fetch(a);return!!b.ok}function convertTime(a){var b=Math.floor;const c=b(a/3600);let d=b(a%3600/60),e=b(a%60);return 10>e&&(e="0"+e),c?(10>d&&(d="0"+d),c+":"+d+":"+e):d+":"+e}function vkClipboardCopy(a){navigator.clipboard.writeText(a)}function vkClipboardPaste(){return navigator.clipboard.readText()}function vkShare(a,b,c){navigator.share({title:a,text:b,url:c})}function vkStorageSet(a,b,c){var d=Math.floor;function e(a,b){const c=b.match(/^(\d+)([dhm])$/);if(!c)throw new Error("Invalid duration format. Use Xd, Xh, or Xm (X being a positive integer).");const d=parseInt(c[1]),e=c[2];if(isNaN(d)||0>=d)throw new Error("The quantity of time must be a positive integer.");const f=new Date(a.getTime());switch(e){case"d":f.setDate(f.getDate()+d);break;case"h":f.setTime(f.getTime()+1e3*(60*(60*d)));break;case"m":f.setTime(f.getTime()+1e3*(60*d));break;default:throw new Error("Invalid time unit. Use 'd' (= days), 'h' (= hours), or 'm' (= minutes).")}return f}let f=3<arguments.length&&arguments[3]!==void 0?arguments[3]:"30d";switch(c){case"local":try{return localStorage.setItem(a,JSON.stringify(b)),!0}catch(a){return console.error("Error when handling localStorage :",a),!1}case"session":try{return sessionStorage.setItem(a,JSON.stringify(b)),!0}catch(a){return console.error("Error when handling sessionStorage :",a),!1}case"cookie":try{let c=`${encodeURIComponent(a)}=${encodeURIComponent(JSON.stringify(b))}`;const g=e(new Date,f),h=d((g-new Date)/1e3);return c+=`;max-age=${h}`,document.cookie=c,!0}catch(a){return console.error("Error when handling cookies :",a),!1}default:return console.error("This storage tool unavailable (check spelling) :",c),!1}}function vkStorageGet(a,b){function c(a){try{return JSON.parse(a)}catch(b){return"undefined"===a?void 0:a}}switch(b){case"local":try{const b=localStorage.getItem(a);return null===b?null:c(b)}catch(a){return console.error("Error when handling localStorage :",a),null}case"session":try{const b=sessionStorage.getItem(a);return null===b?null:c(b)}catch(a){return console.error("Error when handling sessionStorage :",a),null}case"cookie":try{const b=document.cookie.split(";");for(const d of b){const[b,e]=d.split("=");if(decodeURIComponent(b.trim())===a){const a=decodeURIComponent(e.trim());return c(a)}}return null}catch(a){return console.error("Error when handling cookies :",a),null}default:return console.error("This storage tool unavailable (check spelling) :",b),null}}function vkStorageRemove(a,b){switch(b){case"local":try{return localStorage.removeItem(a),!0}catch(a){return console.error("Error when handling localStorage :",a),!1}case"session":try{return sessionStorage.removeItem(a),!0}catch(a){return console.error("Error when handling sessionStorage :",a),!1}case"cookie":try{return document.cookie=`${encodeURIComponent(a)}=; expires=Thu, 01 Jan 1970 00:00:00 GMT;`,!0}catch(a){return console.error("Error when handling cookies :",a),!1}default:return console.error("This storage tool unavailable (check spelling) :",b),!1}}function vkThemeIsDark(){return"dark"===document.documentElement.getAttribute("data-vk-theme")}function vkThemeToggle(){document.querySelectorAll(".vkThemeButton").forEach(a=>{vkThemeIsDark()?(document.documentElement.setAttribute("data-vk-theme","light"),a.classList.replace("ti-moon","ti-sun")):(document.documentElement.setAttribute("data-vk-theme","dark"),a.classList.replace("ti-sun","ti-moon"))}),vkStorageSet("vkThemeIsDark",vkThemeIsDark(),"local")}function vkThemeStartup(){const a=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches;if(a)return vkThemeToggle(),console.info("Dark mode enabled according to the system preferences."),!0;const b=vkStorageGet("vkThemeIsDark","local");return b&&(vkThemeToggle(),console.info("Dark mode enabled according to the memory.")),!1}vkThemeStartup(),document.querySelectorAll(".vkThemeButton").forEach(a=>{a.addEventListener("click",()=>{vkThemeToggle()})});function vkColorMetatag(){let a=document.querySelector("meta[name=\"data-vk-theme\"]");a||(a=document.createElement("meta"),a.setAttribute("name","theme-color"),document.head.appendChild(a)),a.setAttribute("content",`hsl(${getComputedStyle(document.documentElement).getPropertyValue("--vkColorA40")})`)}function vkPopupSetup(a){function b(b){g.contains(b.target)||a.contains(b.target)||d(g)}function c(){f(a,g,h)}function d(a){document.removeEventListener("scroll",c),window.removeEventListener("resize",c),document.removeEventListener("click",b),a.style.visibility="hidden"}function e(a){a.style.visibility="visible"}function f(a,b,c){b.style.left="0",b.style.top="0";const d={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight},e=a.getBoundingClientRect(),f=b.getBoundingClientRect(),g="rtl"===getComputedStyle(a).direction,h=g?0>e.left-f.width:e.left+f.width>d.width,i=e.top+f.height>d.height,j={left:0,top:0};j.left="centered"===c.type||"centered-hor"===c.type?(d.width-f.width)/2:h&&!g||!h&&g?e.right-f.left-f.width-5:e.left-f.left+5,j.top="centered"===c.type||"centered-ver"===c.type?(d.height-f.height)/2:i?e.top-f.top-f.height+5:e.bottom-f.top-5,b.style.left=j.left+"px",b.style.top=j.top+"px"}const g=vkClosest(a,a.getAttribute("data-vk-popup-assign"))[0],h={type:"default",triggerEvent:"mouseover",outEvent:"click"};g.classList.contains("vkPopupGlobalpanel")&&(h.type="centered-hor"),a.classList.contains("optionRightClick")&&(h.triggerEvent="contextmenu"),a.addEventListener(h.triggerEvent,i=>{"contextmenu"===h.triggerEvent&&i.preventDefault(),document.querySelectorAll(".vkPopupContextmenu, .vkPopupTooltip, .vkPopupGlobalpanel").forEach(a=>{d(a)}),f(a,g,h),e(g),document.addEventListener("scroll",c),window.addEventListener("resize",c),document.addEventListener(h.outEvent,a=>{b(a)})})}document.querySelectorAll("[data-vk-popup-assign]").forEach(a=>{vkPopupSetup(a)});function vkNotificationPush(a){function b(){const b=new Notification(a.title,{body:a.text||"",icon:a.image?a.image:a.icon?`https://unpkg.com/@tabler/icons/icons/${a.icon}.svg`:""});b.onclick=b=>{a.link&&""!==a.link&&(b.preventDefault(),window.open(a.link))}}function c(){const b=document.createElement("div");b.classList.add("vkNotification"),"atui-mini"===a.type&&b.classList.add("optionMini");const c=document.createElement("header");let d;(a.image||a.icon)&&(a.image?(d=document.createElement("img"),d.setAttribute("src",a.image)):a.icon&&(d=document.createElement("i"),d.classList.add("ti",`ti-${a.icon}`)),c.appendChild(d));const e=document.createElement("p");if(e.textContent="atui-mini"===a.type?a.text:a.title,c.appendChild(e),b.appendChild(c),"atui-mini"!==a.type){const c=document.createElement("section"),d=document.createElement("p");d.innerHTML=a.text,c.appendChild(d),b.appendChild(c)}const f=document.createElement("footer");a.buttons.forEach(a=>{const c=document.createElement("div");c.classList.add("vkButton","optionAccent"),a.option&&""!==a.option&&c.classList.add(`option${a.option}`);const d=document.createElement("p");d.textContent=a.text,c.appendChild(d),c.addEventListener("click",()=>{a.action(),b.remove()}),f.appendChild(c)}),b.appendChild(f);let g=document.querySelector(".vkNotificationContainer");if(g||(g=document.createElement("div"),g.classList.add("vkNotificationContainer"),document.body.appendChild(g)),g.insertBefore(b,g.firstChild),!1!==a.close){let c=!1;b.addEventListener("mouseenter",()=>{c=!0}),b.addEventListener("mouseleave",()=>{c=!1}),setTimeout(()=>{c?b.addEventListener("mouseleave",()=>{setTimeout(()=>{b.remove()},2e3)}):b.remove()},a.close||5e3)}}(async function(){return!("granted"!==Notification.permission)||(await Notification.requestPermission(),"granted"===Notification.permission)})().then(d=>{if(!d)return console.error("Notification cannot be displayed because permission has been denied.");if((!a.title||""===a.title)&&"atui-mini"!==a.type)return console.error("Notification should have a title.");if("system"===a.type)b();else if(!a.type.startsWith("atui"))console.error(`Notification type ${a.type} doesn't exist.`);else if(c(),!("sound"in a)){const a=new Audio(vkNotificationSound);a.play()}else if(a.sound){const b=new Audio(a.sound);b.play()}})}let vkNotificationSound="atui/kernel/assets/notification.mp3";const vkHeaderFixCarousel=()=>{document.querySelectorAll(".vkHeader.optionCarousel").forEach(a=>{const b=vkClosest(a,".vkCarousel",".vkStructureBodyContent")[0],c=vkClosest(b,".vkCarouselSlides > div > div",".vkCarousel"),d=b.querySelector(".vkCarouselControls");b.style.minHeight=2*a.offsetHeight+"px",c.forEach(b=>{b.style.paddingBlockStart=a.offsetHeight+20+"px"}),d.style.marginBlockStart=a.offsetHeight+"px"})};vkHeaderFixCarousel(),window.addEventListener("resize",vkHeaderFixCarousel),document.querySelectorAll(".vkCarousel").forEach(a=>{const b=a.querySelector(".vkCarouselSlides"),c=a.querySelector(".vkCarouselControls"),d=c?.querySelector(".vkCarouselControlsLeft"),e=c?.querySelector(".vkCarouselControlsRight");d?.addEventListener("click",()=>{b.scrollBy({left:-b.offsetWidth,behavior:"smooth"})}),e?.addEventListener("click",()=>{b.scrollBy({left:b.offsetWidth,behavior:"smooth"})})});function vkModalShow(a){const b=document.getElementById(a);b.classList.add("optionShow"),document.addEventListener("click",function(a){a.target===b&&b.classList.remove("optionShow")})}document.querySelectorAll(".vkTabs").forEach(a=>{const b=a.querySelector(".vkTabsHeader"),c=b.querySelectorAll("a"),d=a.querySelector(".vkTabsContent"),e=d.querySelectorAll("div");c.forEach(a=>{a.addEventListener("click",()=>{c.forEach(a=>{a.classList.remove("optionActive")}),e.forEach(a=>{a.classList.remove("optionActive")}),a.classList.add("optionActive"),document.getElementById(a.getAttribute("data-tabs-assign")).classList.add("optionActive")})})}),document.querySelectorAll(".vkAccordion").forEach(a=>{const b=a.querySelector("header"),c=b.querySelector("i"),d=a.querySelector("section");b.addEventListener("click",()=>{"none"===window.getComputedStyle(d).display?(d.style.display="block",c.style.transform="rotate(180deg)"):"block"===window.getComputedStyle(d).display?(d.style.display="none",c.style.transform="rotate(0deg)"):console.error("An unexpected error has occurred.")})}),document.querySelectorAll(".vkScrolltop").forEach(a=>{a.addEventListener("click",()=>{window.scrollTo({top:0})}),window.addEventListener("scroll",()=>{window.scrollY>window.innerHeight?a.classList.add("optionActive"):a.classList.remove("optionActive")})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,