"use strict";const vkVersion="0.5.0-beta";document.querySelectorAll(".vkLicensingAtui").forEach(a=>{a.setAttribute("href","https://github.com/alcapitan/atui/"),a.setAttribute("target","_blank"),a.textContent=`This website is powered by ATUI v${vkVersion}.`});function vkLicensingPrint(){console.info(`This website is powered by ATUI v${vkVersion} (https://github.com/alcapitan/atui).`)}vkLicensingPrint();function vkClosest(a,b){let c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;return 1===a.querySelectorAll(b).length?[a.querySelector(b)]:1<a.querySelectorAll(b).length?Array.from(a.querySelectorAll(b)):Array.from(document.querySelectorAll(b)).includes(a)?[a]:Array.from(document.querySelectorAll(c)).includes(a)?(console.error(`No "${b}" element was found in "${c}".`),[]):null===a.parentNode?(console.error(`No "${b}" element was found in the webpage.`),[]):vkClosest(a.parentNode,b,c)}async function verifyLink(a){const b=await fetch(a);return!!b.ok}function convertTime(a){var b=Math.floor;const c=b(a/3600);let d=b(a%3600/60),e=b(a%60);return 10>e&&(e="0"+e),c?(10>d&&(d="0"+d),c+":"+d+":"+e):d+":"+e}function vkClipboardCopy(a){navigator.clipboard.writeText(a)}function vkClipboardPaste(){return navigator.clipboard.readText()}function vkShare(a,b,c){navigator.share({title:a,text:b,url:c})}function vkStorageSet(a,b,c){var d=Math.floor;function e(a,b){const c=b.match(/^(\d+)([dhm])$/);if(!c)throw new Error("Invalid duration format. Use Xd, Xh, or Xm (X being a positive integer).");const d=parseInt(c[1]),e=c[2];if(isNaN(d)||0>=d)throw new Error("The quantity of time must be a positive integer.");const f=new Date(a.getTime());switch(e){case"d":f.setDate(f.getDate()+d);break;case"h":f.setTime(f.getTime()+1e3*(60*(60*d)));break;case"m":f.setTime(f.getTime()+1e3*(60*d));break;default:throw new Error("Invalid time unit. Use 'd' (= days), 'h' (= hours), or 'm' (= minutes).")}return f}let f=3<arguments.length&&arguments[3]!==void 0?arguments[3]:"30d";switch(c){case"local":try{return localStorage.setItem(a,JSON.stringify(b)),!0}catch(a){return console.error("Error when handling localStorage :",a),!1}case"session":try{return sessionStorage.setItem(a,JSON.stringify(b)),!0}catch(a){return console.error("Error when handling sessionStorage :",a),!1}case"cookie":try{let c=`${encodeURIComponent(a)}=${encodeURIComponent(JSON.stringify(b))}`;const g=e(new Date,f),h=d((g-new Date)/1e3);return c+=`;max-age=${h}`,document.cookie=c,!0}catch(a){return console.error("Error when handling cookies :",a),!1}default:return console.error("This storage tool unavailable (check spelling) :",c),!1}}function vkStorageGet(a,b){function c(a){try{return JSON.parse(a)}catch(b){return"undefined"===a?void 0:a}}switch(b){case"local":try{const b=localStorage.getItem(a);return null===b?null:c(b)}catch(a){return console.error("Error when handling localStorage :",a),null}case"session":try{const b=sessionStorage.getItem(a);return null===b?null:c(b)}catch(a){return console.error("Error when handling sessionStorage :",a),null}case"cookie":try{const b=document.cookie.split(";");for(const d of b){const[b,e]=d.split("=");if(decodeURIComponent(b.trim())===a){const a=decodeURIComponent(e.trim());return c(a)}}return null}catch(a){return console.error("Error when handling cookies :",a),null}default:return console.error("This storage tool unavailable (check spelling) :",b),null}}function vkStorageRemove(a,b){switch(b){case"local":try{return localStorage.removeItem(a),!0}catch(a){return console.error("Error when handling localStorage :",a),!1}case"session":try{return sessionStorage.removeItem(a),!0}catch(a){return console.error("Error when handling sessionStorage :",a),!1}case"cookie":try{return document.cookie=`${encodeURIComponent(a)}=; expires=Thu, 01 Jan 1970 00:00:00 GMT;`,!0}catch(a){return console.error("Error when handling cookies :",a),!1}default:return console.error("This storage tool unavailable (check spelling) :",b),!1}}function vkThemeIsDark(){return"dark"===document.documentElement.getAttribute("data-vk-theme")}function vkThemeToggle(){document.querySelectorAll(".vkThemeButton").forEach(a=>{vkThemeIsDark()?(document.documentElement.setAttribute("data-vk-theme","light"),a.classList.replace("ti-moon","ti-sun")):(document.documentElement.setAttribute("data-vk-theme","dark"),a.classList.replace("ti-sun","ti-moon"))}),vkStorageSet("vkThemeIsDark",vkThemeIsDark(),"cookie","2h")}function vkThemeStartup(){const a=vkStorageGet("vkThemeIsDark","cookie");if(null!==a)return a?(vkThemeToggle(),console.info("Dark mode enabled at startup according to the color theme cookie."),0):(console.info("Light mode enabled at startup according to the color theme cookie."),1);else{console.info("No color theme cookie found, the system preferences will be applied.");const a=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches;return a?(vkThemeToggle(),console.info("Dark mode enabled at startup according to the system preferences."),2):(console.info("Light mode enabled at startup according to the system preferences."),3)}}vkThemeStartup(),document.querySelectorAll(".vkThemeButton").forEach(a=>{a.addEventListener("click",()=>{vkThemeToggle()})});function vkColorMetatag(){let a=document.querySelector("meta[name=\"data-vk-theme\"]");a||(a=document.createElement("meta"),a.setAttribute("name","theme-color"),document.head.appendChild(a)),a.setAttribute("content",`hsl(${getComputedStyle(document.documentElement).getPropertyValue("--vkColorA40")})`)}function vkPopupSetup(a){function b(b){g.contains(b.target)||a.contains(b.target)||d(g)}function c(){f(a,g,h)}function d(a){document.removeEventListener("scroll",c),window.removeEventListener("resize",c),document.removeEventListener("click",b),a.style.visibility="hidden"}function e(a){a.style.visibility="visible"}function f(a,b,c){b.style.left="0",b.style.top="0";const d={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight},e=a.getBoundingClientRect(),f=b.getBoundingClientRect(),g="rtl"===getComputedStyle(a).direction,h=g?0>e.left-f.width:e.left+f.width>d.width,i=e.top+f.height>d.height,j={left:0,top:0};j.left="centered"===c.type||"centered-hor"===c.type?(d.width-f.width)/2:h&&!g||!h&&g?e.right-f.left-f.width-5:e.left-f.left+5,j.top="centered"===c.type||"centered-ver"===c.type?(d.height-f.height)/2:i?e.top-f.top-f.height+5:e.bottom-f.top-5,b.style.left=j.left+"px",b.style.top=j.top+"px"}const g=vkClosest(a,a.getAttribute("data-vk-popup-assign"))[0],h={type:"default",triggerEvent:"mouseover",outEvent:"click"};g.classList.contains("vkPopupGlobalpanel")&&(h.type="centered-hor"),a.classList.contains("optionRightClick")&&(h.triggerEvent="contextmenu"),a.addEventListener(h.triggerEvent,i=>{"contextmenu"===h.triggerEvent&&i.preventDefault(),document.querySelectorAll(".vkPopupContextmenu, .vkPopupTooltip, .vkPopupGlobalpanel").forEach(a=>{d(a)}),f(a,g,h),e(g),document.addEventListener("scroll",c),window.addEventListener("resize",c),document.addEventListener(h.outEvent,a=>{b(a)})})}document.querySelectorAll("[data-vk-popup-assign]").forEach(a=>{vkPopupSetup(a)});function vkNotificationPush(a){function b(){const b=new Notification(a.title,{body:a.text||"",icon:a.image?a.image:a.icon?`https://unpkg.com/@tabler/icons/icons/${a.icon}.svg`:""});b.onclick=b=>{a.link&&""!==a.link&&(b.preventDefault(),window.open(a.link))}}function c(){const b=document.createElement("div");b.classList.add("vkNotification"),"atui-mini"===a.type&&b.classList.add("styleMini");const c=document.createElement("header");let d;(a.image||a.icon)&&(a.image?(d=document.createElement("img"),d.setAttribute("src",a.image)):a.icon&&(d=document.createElement("i"),d.classList.add("ti",`ti-${a.icon}`)),c.appendChild(d));const e=document.createElement("p");if(e.textContent="atui-mini"===a.type?a.text:a.title,c.appendChild(e),b.appendChild(c),"atui-mini"!==a.type){const c=document.createElement("section"),d=document.createElement("p");d.innerHTML=a.text,c.appendChild(d),b.appendChild(c)}const f=document.createElement("footer");a.buttons.forEach(a=>{const c=document.createElement("div");c.classList.add("vkButton","styleAccent"),a.style&&""!==a.style&&c.classList.add(`style${a.style}`);const d=document.createElement("p");d.textContent=a.text,c.appendChild(d),c.addEventListener("click",()=>{a.action(),b.remove()}),f.appendChild(c)}),b.appendChild(f);let g=document.querySelector(".vkNotificationContainer");if(g||(g=document.createElement("div"),g.classList.add("vkNotificationContainer"),document.body.appendChild(g)),g.insertBefore(b,g.firstChild),!1!==a.close){let c=!1;b.addEventListener("mouseenter",()=>{c=!0}),b.addEventListener("mouseleave",()=>{c=!1}),setTimeout(()=>{c?b.addEventListener("mouseleave",()=>{setTimeout(()=>{b.remove()},2e3)}):b.remove()},a.close||5e3)}}(async function(){return!("granted"!==Notification.permission)||(await Notification.requestPermission(),"granted"===Notification.permission)})().then(d=>{if(!d)return console.error("Notification cannot be displayed because permission has been denied.");if((!a.title||""===a.title)&&"atui-mini"!==a.type)return console.error("Notification should have a title.");if("system"===a.type)b();else if(!a.type.startsWith("atui"))console.error(`Notification type ${a.type} doesn't exist.`);else if(c(),!("sound"in a)){const a=new Audio(vkNotificationSound);a.play()}else if(a.sound){const b=new Audio(a.sound);b.play()}})}let vkNotificationSound="atui/kernel/assets/notification.mp3";const vkHeaderFixCarousel=()=>{document.querySelectorAll(".vkHeader.styleCarousel").forEach(a=>{const b=vkClosest(a,".vkCarousel",".vkStructureBodyContent")[0],c=vkClosest(b,".vkCarouselSlides > div > div",".vkCarousel"),d=b.querySelector(".vkCarouselControls");b.style.minHeight=2*a.offsetHeight+"px",c.forEach(b=>{b.style.paddingBlockStart=a.offsetHeight+20+"px"}),d.style.marginBlockStart=a.offsetHeight+"px"})};vkHeaderFixCarousel(),window.addEventListener("resize",vkHeaderFixCarousel),document.querySelectorAll(".vkCarousel").forEach(a=>{const b=a.querySelector(".vkCarouselSlides"),c=a.querySelector(".vkCarouselControls"),d=c?.querySelector(".vkCarouselControlsLeft"),e=c?.querySelector(".vkCarouselControlsRight");d?.addEventListener("click",()=>{b.scrollBy({left:-b.offsetWidth,behavior:"smooth"})}),e?.addEventListener("click",()=>{b.scrollBy({left:b.offsetWidth,behavior:"smooth"})})});function vkModalShow(a){const b=document.getElementById(a);b.classList.add("statusShow"),document.addEventListener("click",function(a){a.target===b&&b.classList.remove("statusShow")})}document.querySelectorAll(".vkTabs").forEach(a=>{const b=a.querySelector(".vkTabsHeader"),c=b.querySelectorAll("a"),d=a.querySelector(".vkTabsContent"),e=d.querySelectorAll("div");c.forEach(a=>{a.addEventListener("click",()=>{c.forEach(a=>{a.classList.remove("statusActive")}),e.forEach(a=>{a.classList.remove("statusActive")}),a.classList.add("statusActive"),document.getElementById(a.getAttribute("data-tabs-assign")).classList.add("statusActive")})})}),document.querySelectorAll(".vkAccordion").forEach(a=>{const b=a.querySelector("header"),c=b.querySelector("i"),d=a.querySelector("section");b.addEventListener("click",()=>{"none"===window.getComputedStyle(d).display?(d.style.display="block",c.style.transform="rotate(180deg)"):"block"===window.getComputedStyle(d).display?(d.style.display="none",c.style.transform="rotate(0deg)"):console.error("An unexpected error has occurred.")})}),document.querySelectorAll(".vkScrolltop").forEach(a=>{a.addEventListener("click",()=>{window.scrollTo({top:0})}),window.addEventListener("scroll",()=>{window.scrollY>window.innerHeight?a.classList.add("statusActive"):a.classList.remove("statusActive")})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ2a1ZlcnNpb24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwibGluayIsInNldEF0dHJpYnV0ZSIsInRleHRDb250ZW50IiwidmtMaWNlbnNpbmdQcmludCIsImNvbnNvbGUiLCJpbmZvIiwidmtDbG9zZXN0IiwiZWxlbWVudCIsInF1ZXJ5Iiwic3RvcCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInF1ZXJ5U2VsZWN0b3IiLCJBcnJheSIsImZyb20iLCJpbmNsdWRlcyIsImVycm9yIiwicGFyZW50Tm9kZSIsInZlcmlmeUxpbmsiLCJ1cmwiLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJjb252ZXJ0VGltZSIsInRpbWUiLCJiIiwiTWF0aCIsImZsb29yIiwiaG91cnMiLCJtaW5zIiwic2VjcyIsInZrQ2xpcGJvYXJkQ29weSIsInRleHQiLCJuYXZpZ2F0b3IiLCJjbGlwYm9hcmQiLCJ3cml0ZVRleHQiLCJ2a0NsaXBib2FyZFBhc3RlIiwicmVhZFRleHQiLCJ2a1NoYXJlIiwidGl0bGUiLCJzaGFyZSIsInZrU3RvcmFnZVNldCIsImtleSIsInZhbHVlIiwidG9vbCIsImQiLCJhZGREdXJhdGlvblRvRGF0ZSIsImRhdGUiLCJkdXJhdGlvbiIsIm1hdGNoIiwiRXJyb3IiLCJxdWFudGl0eSIsInBhcnNlSW50IiwidW5pdCIsImlzTmFOIiwiZGF0ZUNvcHkiLCJEYXRlIiwiZ2V0VGltZSIsInNldERhdGUiLCJnZXREYXRlIiwic2V0VGltZSIsImxpZmV0aW1lIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJzZXNzaW9uU3RvcmFnZSIsImNvb2tpZSIsImVuY29kZVVSSUNvbXBvbmVudCIsImV4cGlyYXRpb25EYXRlIiwibWF4QWdlSW5TZWNvbmRzIiwidmtTdG9yYWdlR2V0IiwiY29udmVydFRvTG9naWNhbFR5cGUiLCJwYXJzZSIsImRhdGEiLCJnZXRJdGVtIiwiY29va2llcyIsInNwbGl0IiwiY29va2llTmFtZSIsImNvb2tpZVZhbHVlIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwidHJpbSIsInZrU3RvcmFnZVJlbW92ZSIsInJlbW92ZUl0ZW0iLCJ2a1RoZW1lSXNEYXJrIiwiZG9jdW1lbnRFbGVtZW50IiwiZ2V0QXR0cmlidXRlIiwidmtUaGVtZVRvZ2dsZSIsImJ1dHRvbiIsImNsYXNzTGlzdCIsInJlcGxhY2UiLCJ2a1RoZW1lU3RhcnR1cCIsImxvY2FsU3RhdHVzIiwic3lzdGVtU3RhdHVzIiwid2luZG93IiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiLCJhZGRFdmVudExpc3RlbmVyIiwidmtDb2xvck1ldGF0YWciLCJtZXRhVGFnIiwiY3JlYXRlRWxlbWVudCIsImhlYWQiLCJhcHBlbmRDaGlsZCIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwidmtQb3B1cFNldHVwIiwibGlzdGVuZXIiLCJkZXRlY3RPdXRzaWRlQ2xpY2siLCJldmVudCIsInBvcHVwIiwiY29udGFpbnMiLCJ0YXJnZXQiLCJ2a1BvcHVwSGlkZSIsInZrUG9wdXBSZWxvYWQiLCJ2a1BvcHVwUG9zaXRpb24iLCJvcHRpb25zIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInN0eWxlIiwidmlzaWJpbGl0eSIsInZrUG9wdXBEaXNwbGF5IiwibGVmdCIsInRvcCIsIndpbmRvd0RpbWVuc2lvbnMiLCJ3aWR0aCIsImNsaWVudFdpZHRoIiwiaGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwibGlzdGVuZXJQb3NpdGlvbiIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInBvcHVwUG9zaXRpb24iLCJpc0xpc3RlbmVyUlRMIiwiZGlyZWN0aW9uIiwib3ZlcmZsb3dJbmxpbmUiLCJvdmVyZmxvd0JvdHRvbSIsImNhbGN1bGF0ZWRQb3NpdGlvbiIsInR5cGUiLCJyaWdodCIsImJvdHRvbSIsInRyaWdnZXJFdmVudCIsIm91dEV2ZW50IiwicHJldmVudERlZmF1bHQiLCJ2a05vdGlmaWNhdGlvblB1c2giLCJzeXN0ZW1QdXNoIiwibm90aWZpY2F0aW9uIiwiTm90aWZpY2F0aW9uIiwiYm9keSIsImljb24iLCJpbWFnZSIsIm9uY2xpY2siLCJvcGVuIiwiaW50ZXJuUHVzaCIsImFkZCIsImhlYWRlciIsInNlY3Rpb24iLCJjb250ZW50IiwiaW5uZXJIVE1MIiwiZm9vdGVyIiwiYnV0dG9ucyIsImJ1dHRvbkVsZW1lbnQiLCJidXR0b25UZXh0RWxlbWVudCIsImFjdGlvbiIsInJlbW92ZSIsImNvbnRhaW5lciIsImluc2VydEJlZm9yZSIsImZpcnN0Q2hpbGQiLCJjbG9zZSIsIm1vdXNlT3ZlciIsInNldFRpbWVvdXQiLCJwZXJtaXNzaW9uIiwicmVxdWVzdFBlcm1pc3Npb24iLCJ0aGVuIiwic3RhcnRzV2l0aCIsInNvdW5kIiwiQXVkaW8iLCJ2a05vdGlmaWNhdGlvblNvdW5kIiwicGxheSIsInZrSGVhZGVyRml4Q2Fyb3VzZWwiLCJjYXJvdXNlbCIsImNhcm91c2VsQ29udGVudCIsImNhcm91c2VsQ29udHJvbHMiLCJtaW5IZWlnaHQiLCJvZmZzZXRIZWlnaHQiLCJwYWRkaW5nQmxvY2tTdGFydCIsIm1hcmdpbkJsb2NrU3RhcnQiLCJzbGlkZXNDb250YWluZXIiLCJjb250cm9scyIsImNvbnRyb2xzTGVmdCIsImNvbnRyb2xzUmlnaHQiLCJzY3JvbGxCeSIsIm9mZnNldFdpZHRoIiwiYmVoYXZpb3IiLCJ2a01vZGFsU2hvdyIsIm1vZGFsSWQiLCJtb2RhbEJhY2tncm91bmQiLCJnZXRFbGVtZW50QnlJZCIsInRhYnNDb250YWluZXIiLCJ0YWJzSGVhZGVyIiwidGFic0hlYWRlckxpbmtzIiwidGFic0NvbnRlbnQiLCJ0YWJzQ29udGVudFRleHRzIiwidGFiIiwiYWNjb3JkaW9uIiwiZGlzcGxheSIsInRyYW5zZm9ybSIsInNjcm9sbFRvIiwic2Nyb2xsWSIsImlubmVySGVpZ2h0Il0sInNvdXJjZXMiOlsiLi4vc3JjL21haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogTGljZW5zaW5nICovXG5cbmNvbnN0IHZrVmVyc2lvbiA9IFwiMC41LjAtYmV0YVwiO1xuXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnZrTGljZW5zaW5nQXR1aVwiKS5mb3JFYWNoKChsaW5rKSA9PiB7XG4gICAgbGluay5zZXRBdHRyaWJ1dGUoXCJocmVmXCIsIFwiaHR0cHM6Ly9naXRodWIuY29tL2FsY2FwaXRhbi9hdHVpL1wiKTtcbiAgICBsaW5rLnNldEF0dHJpYnV0ZShcInRhcmdldFwiLCBcIl9ibGFua1wiKTtcbiAgICBsaW5rLnRleHRDb250ZW50ID0gYFRoaXMgd2Vic2l0ZSBpcyBwb3dlcmVkIGJ5IEFUVUkgdiR7dmtWZXJzaW9ufS5gO1xufSk7XG5cbmZ1bmN0aW9uIHZrTGljZW5zaW5nUHJpbnQoKSB7XG4gICAgY29uc29sZS5pbmZvKGBUaGlzIHdlYnNpdGUgaXMgcG93ZXJlZCBieSBBVFVJIHYke3ZrVmVyc2lvbn0gKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGNhcGl0YW4vYXR1aSkuYCk7XG59XG52a0xpY2Vuc2luZ1ByaW50KCk7XG5cbi8qIEZpbmQgYXNzb2NpYXRlZCBlbGVtZW50ICovXG5cbmZ1bmN0aW9uIHZrQ2xvc2VzdChlbGVtZW50LCBxdWVyeSwgc3RvcCA9IG51bGwpIHtcbiAgICAvKipcbiAgICAgKiAhIFRoaXMgZnVuY3Rpb24gaXMgZGVwcmVjYXRlZCwgaXQgd2lsbCBiZSByZXBsYWNlZCBieSBuYXRpdmUgamF2YXNjcmlwdCBmdW5jdGlvbiBjbG9zZXN0KCkuXG4gICAgICovXG4gICAgaWYgKGVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChxdWVyeSkubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIC8vIElmIGVsZW1lbnQgaGFzIHF1ZXJ5LlxuICAgICAgICByZXR1cm4gW2VsZW1lbnQucXVlcnlTZWxlY3RvcihxdWVyeSldO1xuICAgIH0gZWxzZSBpZiAoZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJ5KS5sZW5ndGggPiAxKSB7XG4gICAgICAgIC8vIElmIGVsZW1lbnQgaGFzIHNldmVyYWwgcXVlcmllcy5cbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20oZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJ5KSk7XG4gICAgfSBlbHNlIGlmIChBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocXVlcnkpKS5pbmNsdWRlcyhlbGVtZW50KSkge1xuICAgICAgICAvLyBJZiBlbGVtZW50IGlzIHF1ZXJ5LlxuICAgICAgICByZXR1cm4gW2VsZW1lbnRdO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHN0b3ApKS5pbmNsdWRlcyhlbGVtZW50KSkge1xuICAgICAgICAvLyBJZiBlbGVtZW50IGlzIHN0b3AuXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYE5vIFwiJHtxdWVyeX1cIiBlbGVtZW50IHdhcyBmb3VuZCBpbiBcIiR7c3RvcH1cIi5gKTtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH0gZWxzZSBpZiAoZWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgICAgIC8vIElmIGVsZW1lbnQgaXMgcm9vdC5cbiAgICAgICAgY29uc29sZS5lcnJvcihgTm8gXCIke3F1ZXJ5fVwiIGVsZW1lbnQgd2FzIGZvdW5kIGluIHRoZSB3ZWJwYWdlLmApO1xuICAgICAgICByZXR1cm4gW107XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gVGhlIHBhcmVudCBvZiBlbGVtZW50IG1heSBoYXZlIHF1ZXJ5LlxuICAgICAgICByZXR1cm4gdmtDbG9zZXN0KGVsZW1lbnQucGFyZW50Tm9kZSwgcXVlcnksIHN0b3ApO1xuICAgIH1cbn1cblxuLyogVmVyaWZ5IGxpbmsgKi9cblxuYXN5bmMgZnVuY3Rpb24gdmVyaWZ5TGluayh1cmwpIHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCk7XG4gICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cbi8qIENvbnZlcnQgdGltZSBkYXRhIHRvIGJlIHJlYWRhYmxlIGJ5IGh1bWFucyAqL1xuXG5mdW5jdGlvbiBjb252ZXJ0VGltZSh0aW1lKSB7XG4gICAgY29uc3QgaG91cnMgPSBNYXRoLmZsb29yKHRpbWUgLyAzNjAwKTtcbiAgICBsZXQgbWlucyA9IE1hdGguZmxvb3IoKHRpbWUgJSAzNjAwKSAvIDYwKTtcbiAgICBsZXQgc2VjcyA9IE1hdGguZmxvb3IodGltZSAlIDYwKTtcbiAgICBpZiAoc2VjcyA8IDEwKSB7XG4gICAgICAgIHNlY3MgPSBcIjBcIiArIHNlY3M7XG4gICAgfVxuICAgIGlmIChob3Vycykge1xuICAgICAgICBpZiAobWlucyA8IDEwKSB7XG4gICAgICAgICAgICBtaW5zID0gXCIwXCIgKyBtaW5zO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBob3VycyArIFwiOlwiICsgbWlucyArIFwiOlwiICsgc2VjczsgLy8gaGg6bW06c3NcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbWlucyArIFwiOlwiICsgc2VjczsgLy8gbW06c3NcbiAgICB9XG59XG5cbi8qIENsaXBib2FyZCB0b29scyAqL1xuXG5mdW5jdGlvbiB2a0NsaXBib2FyZENvcHkodGV4dCkge1xuICAgIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KHRleHQpO1xufVxuXG5mdW5jdGlvbiB2a0NsaXBib2FyZFBhc3RlKCkge1xuICAgIHJldHVybiBuYXZpZ2F0b3IuY2xpcGJvYXJkLnJlYWRUZXh0KCk7XG59XG5cbi8qIFNoYXJlIHRvb2wgKi9cblxuZnVuY3Rpb24gdmtTaGFyZSh0aXRsZSwgdGV4dCwgdXJsKSB7XG4gICAgbmF2aWdhdG9yLnNoYXJlKHtcbiAgICAgICAgdGl0bGUsXG4gICAgICAgIHRleHQsXG4gICAgICAgIHVybCxcbiAgICB9KTtcbn1cblxuLyogRGF0YSBzdG9yYWdlICovXG5cbi8qKlxuICogQ3JlYXRlIG9yIHVwZGF0ZSBkYXRhIHN0b3JlZCBpbiB0aGUgdXNlcidzIGRldmljZSAod2l0aCBsb2NhbFN0b3JhZ2UsIHNlc3Npb25TdG9yYWdlLCBvciBjb29raWVzKS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgLSBUaGUga2V5IHRvIGlkZW50aWZ5IHRoZSBkYXRhLlxuICogQHBhcmFtIHsqfSB2YWx1ZSAtIFRoZSBkYXRhIHRvIGJlIHNhdmVkLlxuICogQHBhcmFtIHtzdHJpbmd9IHRvb2wgLSBUaGUgc3RvcmFnZSB0b29sIHRvIHVzZTogXCJsb2NhbFwiIChtZWFucyBsb2NhbFN0b3JhZ2UpLCBcInNlc3Npb25cIiAobWVhbnMgc2Vzc2lvblN0b3JhZ2UpLCBvciBcImNvb2tpZVwiLlxuICogQHBhcmFtIHtzdHJpbmd9IFtsaWZldGltZT1cIjMwZFwiXSAtIFRoZSBkYXRhJ3MgbGlmZXRpbWUgKG9ubHkgZm9yIFwiY29va2llXCIgc3RvcmFnZSkgKFwiMzdtXCIgbWVhbnMgMzcgbWludXRlcywgXCI0aFwiIG1lYW5zIDQgaG91cnMgYW5kIFwiOGRcIiBtZWFucyA4IGRheXMpLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgdHJ1ZSBpZiB0aGUgZGF0YSB3YXMgc2F2ZWQgc3VjY2Vzc2Z1bGx5LCBvdGhlcndpc2UgZmFsc2UuXG4gKi9cbmZ1bmN0aW9uIHZrU3RvcmFnZVNldChrZXksIHZhbHVlLCB0b29sLCBsaWZldGltZSA9IFwiMzBkXCIpIHtcbiAgICBmdW5jdGlvbiBhZGREdXJhdGlvblRvRGF0ZShkYXRlLCBkdXJhdGlvbikge1xuICAgICAgICBjb25zdCByZWdleCA9IC9eKFxcZCspKFtkaG1dKSQvO1xuICAgICAgICBjb25zdCBtYXRjaCA9IGR1cmF0aW9uLm1hdGNoKHJlZ2V4KTtcblxuICAgICAgICBpZiAoIW1hdGNoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGR1cmF0aW9uIGZvcm1hdC4gVXNlIFhkLCBYaCwgb3IgWG0gKFggYmVpbmcgYSBwb3NpdGl2ZSBpbnRlZ2VyKS5cIik7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBxdWFudGl0eSA9IHBhcnNlSW50KG1hdGNoWzFdKTtcbiAgICAgICAgY29uc3QgdW5pdCA9IG1hdGNoWzJdO1xuXG4gICAgICAgIGlmIChpc05hTihxdWFudGl0eSkgfHwgcXVhbnRpdHkgPD0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHF1YW50aXR5IG9mIHRpbWUgbXVzdCBiZSBhIHBvc2l0aXZlIGludGVnZXIuXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZGF0ZUNvcHkgPSBuZXcgRGF0ZShkYXRlLmdldFRpbWUoKSk7XG5cbiAgICAgICAgc3dpdGNoICh1bml0KSB7XG4gICAgICAgICAgICBjYXNlIFwiZFwiOiAvLyBEYXlzXG4gICAgICAgICAgICAgICAgZGF0ZUNvcHkuc2V0RGF0ZShkYXRlQ29weS5nZXREYXRlKCkgKyBxdWFudGl0eSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiaFwiOiAvLyBIb3Vyc1xuICAgICAgICAgICAgICAgIGRhdGVDb3B5LnNldFRpbWUoZGF0ZUNvcHkuZ2V0VGltZSgpICsgcXVhbnRpdHkgKiA2MCAqIDYwICogMTAwMCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibVwiOiAvLyBNaW51dGVzXG4gICAgICAgICAgICAgICAgZGF0ZUNvcHkuc2V0VGltZShkYXRlQ29weS5nZXRUaW1lKCkgKyBxdWFudGl0eSAqIDYwICogMTAwMCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdGltZSB1bml0LiBVc2UgJ2QnICg9IGRheXMpLCAnaCcgKD0gaG91cnMpLCBvciAnbScgKD0gbWludXRlcykuXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGRhdGVDb3B5O1xuICAgIH1cblxuICAgIHN3aXRjaCAodG9vbCkge1xuICAgICAgICBjYXNlIFwibG9jYWxcIjpcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeSh2YWx1ZSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igd2hlbiBoYW5kbGluZyBsb2NhbFN0b3JhZ2UgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIFwic2Vzc2lvblwiOlxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKGtleSwgSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHdoZW4gaGFuZGxpbmcgc2Vzc2lvblN0b3JhZ2UgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIFwiY29va2llXCI6XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxldCBjb29raWUgPSBgJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkodmFsdWUpKX1gO1xuICAgICAgICAgICAgICAgIGNvbnN0IGV4cGlyYXRpb25EYXRlID0gYWRkRHVyYXRpb25Ub0RhdGUobmV3IERhdGUoKSwgbGlmZXRpbWUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1heEFnZUluU2Vjb25kcyA9IE1hdGguZmxvb3IoKGV4cGlyYXRpb25EYXRlIC0gbmV3IERhdGUoKSkgLyAxMDAwKTtcbiAgICAgICAgICAgICAgICBjb29raWUgKz0gYDttYXgtYWdlPSR7bWF4QWdlSW5TZWNvbmRzfWA7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuY29va2llID0gY29va2llO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igd2hlbiBoYW5kbGluZyBjb29raWVzIDpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJUaGlzIHN0b3JhZ2UgdG9vbCB1bmF2YWlsYWJsZSAoY2hlY2sgc3BlbGxpbmcpIDpcIiwgdG9vbCk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuXG4vKipcbiAqIFJldHJpZXZlcyBkYXRhIHN0b3JlZCBpbiB0aGUgdXNlcidzIGRldmljZSAod2l0aCBsb2NhbFN0b3JhZ2UsIHNlc3Npb25TdG9yYWdlLCBvciBjb29raWVzKS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgLSBUaGUga2V5IHRvIGlkZW50aWZ5IHRoZSBkYXRhIHRvIHJldHJpZXZlLlxuICogQHBhcmFtIHtzdHJpbmd9IHRvb2wgLSBUaGUgc3RvcmFnZSB0b29sIHRvIHVzZTogXCJsb2NhbFwiIChtZWFucyBsb2NhbFN0b3JhZ2UpLCBcInNlc3Npb25cIiAobWVhbnMgc2Vzc2lvblN0b3JhZ2UpLCBvciBcImNvb2tpZVwiLlxuICogQHJldHVybnMgeyp9IFRoZSByZXRyaWV2ZWQgZGF0YSBvciBudWxsIGlmIG5vIGRhdGEgaXMgZm91bmQuXG4gKi9cbmZ1bmN0aW9uIHZrU3RvcmFnZUdldChrZXksIHRvb2wpIHtcbiAgICBmdW5jdGlvbiBjb252ZXJ0VG9Mb2dpY2FsVHlwZSh2YWx1ZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodmFsdWUpOyAvLyBJZiB0aGUgdmFsdWUgaXMgYSBkaWN0aW9uYXJ5LCBhbiBhcnJheSwgYSBib29sZWFuLCBhIG51bWJlciwgb3IgbnVsbFxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID09PSBcInVuZGVmaW5lZFwiID8gdW5kZWZpbmVkIDogdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRvb2wpIHtcbiAgICAgICAgY2FzZSBcImxvY2FsXCI6XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhICE9PSBudWxsID8gY29udmVydFRvTG9naWNhbFR5cGUoZGF0YSkgOiBudWxsO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igd2hlbiBoYW5kbGluZyBsb2NhbFN0b3JhZ2UgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJzZXNzaW9uXCI6XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKGtleSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEgIT09IG51bGwgPyBjb252ZXJ0VG9Mb2dpY2FsVHlwZShkYXRhKSA6IG51bGw7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB3aGVuIGhhbmRsaW5nIHNlc3Npb25TdG9yYWdlIDpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIFwiY29va2llXCI6XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvb2tpZXMgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoXCI7XCIpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY29va2llIG9mIGNvb2tpZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgW2Nvb2tpZU5hbWUsIGNvb2tpZVZhbHVlXSA9IGNvb2tpZS5zcGxpdChcIj1cIik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkZWNvZGVVUklDb21wb25lbnQoY29va2llTmFtZS50cmltKCkpID09PSBrZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBkZWNvZGVVUklDb21wb25lbnQoY29va2llVmFsdWUudHJpbSgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb252ZXJ0VG9Mb2dpY2FsVHlwZShkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsgLy8gSWYgbm8gY29va2llIGZvdW5kXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB3aGVuIGhhbmRsaW5nIGNvb2tpZXMgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiVGhpcyBzdG9yYWdlIHRvb2wgdW5hdmFpbGFibGUgKGNoZWNrIHNwZWxsaW5nKSA6XCIsIHRvb2wpO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuXG4vKipcbiAqIFJlbW92ZXMgZGF0YSBzdG9yZWQgaW4gdGhlIHVzZXIncyBkZXZpY2UgKHdpdGggbG9jYWxTdG9yYWdlLCBzZXNzaW9uU3RvcmFnZSwgb3IgY29va2llcykuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gVGhlIGtleSB0byBpZGVudGlmeSB0aGUgZGF0YSB0byByZW1vdmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gdG9vbCAtIFRoZSBzdG9yYWdlIHRvb2wgdG8gdXNlOiBcImxvY2FsXCIgKG1lYW5zIGxvY2FsU3RvcmFnZSksIFwic2Vzc2lvblwiIChtZWFucyBzZXNzaW9uU3RvcmFnZSksIG9yIFwiY29va2llXCIuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyB0cnVlIGlmIHRoZSBkYXRhIHdhcyByZW1vdmVkIHN1Y2Nlc3NmdWxseSwgb3RoZXJ3aXNlIGZhbHNlLlxuICovXG5mdW5jdGlvbiB2a1N0b3JhZ2VSZW1vdmUoa2V5LCB0b29sKSB7XG4gICAgc3dpdGNoICh0b29sKSB7XG4gICAgICAgIGNhc2UgXCJsb2NhbFwiOlxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igd2hlbiBoYW5kbGluZyBsb2NhbFN0b3JhZ2UgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIFwic2Vzc2lvblwiOlxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB3aGVuIGhhbmRsaW5nIHNlc3Npb25TdG9yYWdlIDpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgY2FzZSBcImNvb2tpZVwiOlxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5jb29raWUgPSBgJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09OyBleHBpcmVzPVRodSwgMDEgSmFuIDE5NzAgMDA6MDA6MDAgR01UO2A7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB3aGVuIGhhbmRsaW5nIGNvb2tpZXMgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIlRoaXMgc3RvcmFnZSB0b29sIHVuYXZhaWxhYmxlIChjaGVjayBzcGVsbGluZykgOlwiLCB0b29sKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cbi8qIERpc3BsYXkgbW9kZSAqL1xuXG5mdW5jdGlvbiB2a1RoZW1lSXNEYXJrKCkge1xuICAgIHJldHVybiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS12ay10aGVtZVwiKSA9PT0gXCJkYXJrXCI7XG59XG5cbmZ1bmN0aW9uIHZrVGhlbWVUb2dnbGUoKSB7XG4gICAgLyogVG9nZ2xlcyB0aGUgc3RhdHVzICovXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi52a1RoZW1lQnV0dG9uXCIpLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgICAgICBpZiAodmtUaGVtZUlzRGFyaygpKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2V0QXR0cmlidXRlKFwiZGF0YS12ay10aGVtZVwiLCBcImxpZ2h0XCIpO1xuICAgICAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5yZXBsYWNlKFwidGktbW9vblwiLCBcInRpLXN1blwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXZrLXRoZW1lXCIsIFwiZGFya1wiKTtcbiAgICAgICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QucmVwbGFjZShcInRpLXN1blwiLCBcInRpLW1vb25cIik7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICB2a1N0b3JhZ2VTZXQoXCJ2a1RoZW1lSXNEYXJrXCIsIHZrVGhlbWVJc0RhcmsoKSwgXCJjb29raWVcIiwgXCIyaFwiKTtcbn1cblxuZnVuY3Rpb24gdmtUaGVtZVN0YXJ0dXAoKSB7XG4gICAgY29uc3QgbG9jYWxTdGF0dXMgPSB2a1N0b3JhZ2VHZXQoXCJ2a1RoZW1lSXNEYXJrXCIsIFwiY29va2llXCIpO1xuICAgIC8qXG4gICAgICAgIElmIGxvY2FsU3RhdHVzIGlzIG51bGwsIGl0IG1lYW5zIHRoZXJlIGlzIG5vIG5vbi1leHBpcmVkIGNvbG9yIHRoZW1lIGNvb2tpZS5cbiAgICAgICAgSWYgbG9jYWxTdGF0dXMgaXMgZmFsc2UsIGl0IG1lYW5zIHRoZSBjb29raWUgb3JkZXIgdG8ga2VlcCBsaWdodCBtb2RlLlxuICAgICAgICBJZiBsb2NhbFN0YXR1cyBpcyB0cnVlLCBpdCBtZWFucyB0aGUgY29va2llIG9yZGVyIHRvIHRvZ2dsZSBkYXJrIG1vZGUuXG4gICAgKi9cbiAgICBpZiAobG9jYWxTdGF0dXMgIT09IG51bGwpIHtcbiAgICAgICAgaWYgKGxvY2FsU3RhdHVzKSB7XG4gICAgICAgICAgICB2a1RoZW1lVG9nZ2xlKCk7XG4gICAgICAgICAgICBjb25zb2xlLmluZm8oXCJEYXJrIG1vZGUgZW5hYmxlZCBhdCBzdGFydHVwIGFjY29yZGluZyB0byB0aGUgY29sb3IgdGhlbWUgY29va2llLlwiKTtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5pbmZvKFwiTGlnaHQgbW9kZSBlbmFibGVkIGF0IHN0YXJ0dXAgYWNjb3JkaW5nIHRvIHRoZSBjb2xvciB0aGVtZSBjb29raWUuXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmluZm8oXCJObyBjb2xvciB0aGVtZSBjb29raWUgZm91bmQsIHRoZSBzeXN0ZW0gcHJlZmVyZW5jZXMgd2lsbCBiZSBhcHBsaWVkLlwiKTtcbiAgICAgICAgY29uc3Qgc3lzdGVtU3RhdHVzID0gd2luZG93Lm1hdGNoTWVkaWEgJiYgd2luZG93Lm1hdGNoTWVkaWEoXCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspXCIpLm1hdGNoZXM7XG4gICAgICAgIGlmIChzeXN0ZW1TdGF0dXMpIHtcbiAgICAgICAgICAgIHZrVGhlbWVUb2dnbGUoKTtcbiAgICAgICAgICAgIGNvbnNvbGUuaW5mbyhcIkRhcmsgbW9kZSBlbmFibGVkIGF0IHN0YXJ0dXAgYWNjb3JkaW5nIHRvIHRoZSBzeXN0ZW0gcHJlZmVyZW5jZXMuXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmluZm8oXCJMaWdodCBtb2RlIGVuYWJsZWQgYXQgc3RhcnR1cCBhY2NvcmRpbmcgdG8gdGhlIHN5c3RlbSBwcmVmZXJlbmNlcy5cIik7XG4gICAgICAgICAgICByZXR1cm4gMztcbiAgICAgICAgfVxuICAgIH1cbn1cbnZrVGhlbWVTdGFydHVwKCk7XG5cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIudmtUaGVtZUJ1dHRvblwiKS5mb3JFYWNoKChidXR0b24pID0+IHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgdmtUaGVtZVRvZ2dsZSgpO1xuICAgIH0pO1xufSk7XG5cbi8qIENvbG9yIGFjY2VudCAqL1xuXG5mdW5jdGlvbiB2a0NvbG9yTWV0YXRhZygpIHtcbiAgICBsZXQgbWV0YVRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ21ldGFbbmFtZT1cImRhdGEtdmstdGhlbWVcIl0nKTtcbiAgICBpZiAoIW1ldGFUYWcpIHtcbiAgICAgICAgbWV0YVRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJtZXRhXCIpO1xuICAgICAgICBtZXRhVGFnLnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgXCJ0aGVtZS1jb2xvclwiKTtcbiAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChtZXRhVGFnKTtcbiAgICB9XG4gICAgbWV0YVRhZy5zZXRBdHRyaWJ1dGUoXG4gICAgICAgIFwiY29udGVudFwiLFxuICAgICAgICBgaHNsKCR7Z2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmdldFByb3BlcnR5VmFsdWUoXCItLXZrQ29sb3JBNDBcIil9KWAsXG4gICAgKTtcbn1cblxuLyogUG9wLXVwICovXG5cbmZ1bmN0aW9uIHZrUG9wdXBTZXR1cChsaXN0ZW5lcikge1xuICAgIGNvbnN0IHBvcHVwID0gdmtDbG9zZXN0KGxpc3RlbmVyLCBsaXN0ZW5lci5nZXRBdHRyaWJ1dGUoXCJkYXRhLXZrLXBvcHVwLWFzc2lnblwiKSlbMF07XG5cbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICB0eXBlOiBcImRlZmF1bHRcIixcbiAgICAgICAgdHJpZ2dlckV2ZW50OiBcIm1vdXNlb3ZlclwiLFxuICAgICAgICBvdXRFdmVudDogXCJjbGlja1wiLFxuICAgIH07XG5cbiAgICBpZiAocG9wdXAuY2xhc3NMaXN0LmNvbnRhaW5zKFwidmtQb3B1cEdsb2JhbHBhbmVsXCIpKSB7XG4gICAgICAgIG9wdGlvbnMudHlwZSA9IFwiY2VudGVyZWQtaG9yXCI7XG4gICAgfVxuXG4gICAgaWYgKGxpc3RlbmVyLmNsYXNzTGlzdC5jb250YWlucyhcIm9wdGlvblJpZ2h0Q2xpY2tcIikpIHtcbiAgICAgICAgb3B0aW9ucy50cmlnZ2VyRXZlbnQgPSBcImNvbnRleHRtZW51XCI7XG4gICAgfVxuXG4gICAgbGlzdGVuZXIuYWRkRXZlbnRMaXN0ZW5lcihvcHRpb25zLnRyaWdnZXJFdmVudCwgKGV2ZW50KSA9PiB7XG4gICAgICAgIC8vIFByZXZlbnQgZGVmYXVsdCBjb250ZXh0IG1lbnUgb24gcmlnaHQgY2xpY2tcbiAgICAgICAgaWYgKG9wdGlvbnMudHJpZ2dlckV2ZW50ID09PSBcImNvbnRleHRtZW51XCIpIHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBIaWRlIGFsbCBwb3B1cHNcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi52a1BvcHVwQ29udGV4dG1lbnUsIC52a1BvcHVwVG9vbHRpcCwgLnZrUG9wdXBHbG9iYWxwYW5lbFwiKS5mb3JFYWNoKChwb3B1cCkgPT4ge1xuICAgICAgICAgICAgdmtQb3B1cEhpZGUocG9wdXApO1xuICAgICAgICB9KTtcblxuICAgICAgICB2a1BvcHVwUG9zaXRpb24obGlzdGVuZXIsIHBvcHVwLCBvcHRpb25zKTtcbiAgICAgICAgdmtQb3B1cERpc3BsYXkocG9wdXApO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIHZrUG9wdXBSZWxvYWQpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB2a1BvcHVwUmVsb2FkKTtcblxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKG9wdGlvbnMub3V0RXZlbnQsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgZGV0ZWN0T3V0c2lkZUNsaWNrKGV2ZW50KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBkZXRlY3RPdXRzaWRlQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgaWYgKCFwb3B1cC5jb250YWlucyhldmVudC50YXJnZXQpICYmICFsaXN0ZW5lci5jb250YWlucyhldmVudC50YXJnZXQpKSB7XG4gICAgICAgICAgICB2a1BvcHVwSGlkZShwb3B1cCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiB2a1BvcHVwUmVsb2FkKCkge1xuICAgICAgICB2a1BvcHVwUG9zaXRpb24obGlzdGVuZXIsIHBvcHVwLCBvcHRpb25zKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB2a1BvcHVwSGlkZShwb3B1cCkge1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIHZrUG9wdXBSZWxvYWQpO1xuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB2a1BvcHVwUmVsb2FkKTtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGRldGVjdE91dHNpZGVDbGljayk7XG4gICAgICAgIHBvcHVwLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHZrUG9wdXBEaXNwbGF5KHBvcHVwKSB7XG4gICAgICAgIHBvcHVwLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB2a1BvcHVwUG9zaXRpb24obGlzdGVuZXIsIHBvcHVwLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IGdhcCA9IDU7XG5cbiAgICAgICAgLy8gVGhlIHRlbXBvcmFyeSBwb3NpdGlvbiBhdCAwIGlzIHZlcnkgaW1wb3J0YW50IHRvIGdldCB0aGUgZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkgcG9zaXRpb24gYXQgMHB4OzBweCBhbmQgdGh1cyBrbm93IHRoZSBzaGlmdC5cbiAgICAgICAgcG9wdXAuc3R5bGUubGVmdCA9IFwiMFwiO1xuICAgICAgICBwb3B1cC5zdHlsZS50b3AgPSBcIjBcIjtcblxuICAgICAgICAvLyBUaGUgdmFyaWFibGVzIHdpbmRvd0RpbWVuc2lvbnMsIGxpc3RlbmVyUG9zaXRpb24gYW5kIHBvcHVwUG9zaXRpb24gaGF2ZSBiZWVuIG1hZGUgdG8gZmFjaWxpdGF0ZSB0aGUgcmVhZGluZyBvZiB0aGUgY29kZS5cbiAgICAgICAgY29uc3Qgd2luZG93RGltZW5zaW9ucyA9IHtcbiAgICAgICAgICAgIHdpZHRoOiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQsXG4gICAgICAgIH07XG4gICAgICAgIC8vIFNjaGVtYSBvZiBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKSA6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9FbGVtZW50L2dldEJvdW5kaW5nQ2xpZW50UmVjdCNyZXR1cm5fdmFsdWVcbiAgICAgICAgY29uc3QgbGlzdGVuZXJQb3NpdGlvbiA9IGxpc3RlbmVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICBjb25zdCBwb3B1cFBvc2l0aW9uID0gcG9wdXAuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICAgICAgY29uc3QgaXNMaXN0ZW5lclJUTCA9IGdldENvbXB1dGVkU3R5bGUobGlzdGVuZXIpLmRpcmVjdGlvbiA9PT0gXCJydGxcIjtcblxuICAgICAgICBjb25zdCBvdmVyZmxvd0lubGluZSA9ICFpc0xpc3RlbmVyUlRMXG4gICAgICAgICAgICA/IGxpc3RlbmVyUG9zaXRpb24ubGVmdCArIHBvcHVwUG9zaXRpb24ud2lkdGggPiB3aW5kb3dEaW1lbnNpb25zLndpZHRoXG4gICAgICAgICAgICA6IGxpc3RlbmVyUG9zaXRpb24ubGVmdCAtIHBvcHVwUG9zaXRpb24ud2lkdGggPCAwO1xuICAgICAgICBjb25zdCBvdmVyZmxvd0JvdHRvbSA9IGxpc3RlbmVyUG9zaXRpb24udG9wICsgcG9wdXBQb3NpdGlvbi5oZWlnaHQgPiB3aW5kb3dEaW1lbnNpb25zLmhlaWdodDtcblxuICAgICAgICBjb25zdCBjYWxjdWxhdGVkUG9zaXRpb24gPSB7XG4gICAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgICAgdG9wOiAwLFxuICAgICAgICB9O1xuXG4gICAgICAgIGlmIChvcHRpb25zLnR5cGUgPT09IFwiY2VudGVyZWRcIiB8fCBvcHRpb25zLnR5cGUgPT09IFwiY2VudGVyZWQtaG9yXCIpIHtcbiAgICAgICAgICAgIGNhbGN1bGF0ZWRQb3NpdGlvbi5sZWZ0ID0gKHdpbmRvd0RpbWVuc2lvbnMud2lkdGggLSBwb3B1cFBvc2l0aW9uLndpZHRoKSAvIDI7XG4gICAgICAgIH0gZWxzZSBpZiAoKG92ZXJmbG93SW5saW5lICYmICFpc0xpc3RlbmVyUlRMKSB8fCAoIW92ZXJmbG93SW5saW5lICYmIGlzTGlzdGVuZXJSVEwpKSB7XG4gICAgICAgICAgICBjYWxjdWxhdGVkUG9zaXRpb24ubGVmdCA9IGxpc3RlbmVyUG9zaXRpb24ucmlnaHQgLSBwb3B1cFBvc2l0aW9uLmxlZnQgLSBwb3B1cFBvc2l0aW9uLndpZHRoIC0gZ2FwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FsY3VsYXRlZFBvc2l0aW9uLmxlZnQgPSBsaXN0ZW5lclBvc2l0aW9uLmxlZnQgLSBwb3B1cFBvc2l0aW9uLmxlZnQgKyBnYXA7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAob3B0aW9ucy50eXBlID09PSBcImNlbnRlcmVkXCIgfHwgb3B0aW9ucy50eXBlID09PSBcImNlbnRlcmVkLXZlclwiKSB7XG4gICAgICAgICAgICBjYWxjdWxhdGVkUG9zaXRpb24udG9wID0gKHdpbmRvd0RpbWVuc2lvbnMuaGVpZ2h0IC0gcG9wdXBQb3NpdGlvbi5oZWlnaHQpIC8gMjtcbiAgICAgICAgfSBlbHNlIGlmIChvdmVyZmxvd0JvdHRvbSkge1xuICAgICAgICAgICAgY2FsY3VsYXRlZFBvc2l0aW9uLnRvcCA9IGxpc3RlbmVyUG9zaXRpb24udG9wIC0gcG9wdXBQb3NpdGlvbi50b3AgLSBwb3B1cFBvc2l0aW9uLmhlaWdodCArIGdhcDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhbGN1bGF0ZWRQb3NpdGlvbi50b3AgPSBsaXN0ZW5lclBvc2l0aW9uLmJvdHRvbSAtIHBvcHVwUG9zaXRpb24udG9wIC0gZ2FwO1xuICAgICAgICB9XG5cbiAgICAgICAgcG9wdXAuc3R5bGUubGVmdCA9IGNhbGN1bGF0ZWRQb3NpdGlvbi5sZWZ0ICsgXCJweFwiO1xuICAgICAgICBwb3B1cC5zdHlsZS50b3AgPSBjYWxjdWxhdGVkUG9zaXRpb24udG9wICsgXCJweFwiO1xuICAgIH1cbn1cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS12ay1wb3B1cC1hc3NpZ25dXCIpLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgdmtQb3B1cFNldHVwKGxpc3RlbmVyKTtcbn0pO1xuXG4vKiBOb3RpZmljYXRpb25zICovXG5cbmZ1bmN0aW9uIHZrTm90aWZpY2F0aW9uUHVzaChvcHRpb25zKSB7XG4gICAgZnVuY3Rpb24gc3lzdGVtUHVzaCgpIHtcbiAgICAgICAgY29uc3Qgbm90aWZpY2F0aW9uID0gbmV3IE5vdGlmaWNhdGlvbihvcHRpb25zLnRpdGxlLCB7XG4gICAgICAgICAgICBib2R5OiBvcHRpb25zLnRleHQgfHwgXCJcIixcbiAgICAgICAgICAgIGljb246IG9wdGlvbnMuaW1hZ2VcbiAgICAgICAgICAgICAgICA/IG9wdGlvbnMuaW1hZ2VcbiAgICAgICAgICAgICAgICA6IG9wdGlvbnMuaWNvblxuICAgICAgICAgICAgICAgID8gYGh0dHBzOi8vdW5wa2cuY29tL0B0YWJsZXIvaWNvbnMvaWNvbnMvJHtvcHRpb25zLmljb259LnN2Z2BcbiAgICAgICAgICAgICAgICA6IFwiXCIsXG4gICAgICAgIH0pO1xuICAgICAgICBub3RpZmljYXRpb24ub25jbGljayA9IChldmVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMubGluayAmJiBvcHRpb25zLmxpbmsgIT09IFwiXCIpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKG9wdGlvbnMubGluayk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW50ZXJuUHVzaCgpIHtcbiAgICAgICAgLy8gQ3JlYXRlIHRoZSBub3RpZmljYXRpb24gZWxlbWVudFxuICAgICAgICBjb25zdCBub3RpZmljYXRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBub3RpZmljYXRpb24uY2xhc3NMaXN0LmFkZChcInZrTm90aWZpY2F0aW9uXCIpO1xuICAgICAgICBpZiAob3B0aW9ucy50eXBlID09PSBcImF0dWktbWluaVwiKSBub3RpZmljYXRpb24uY2xhc3NMaXN0LmFkZChcInN0eWxlTWluaVwiKTtcblxuICAgICAgICAvLyBDcmVhdGUgdGhlIGljb24gZWxlbWVudCBpbiB0aGUgaGVhZGVyXG4gICAgICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoZWFkZXJcIik7XG4gICAgICAgIGxldCBpY29uO1xuICAgICAgICBpZiAob3B0aW9ucy5pbWFnZSB8fCBvcHRpb25zLmljb24pIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLmltYWdlKSB7XG4gICAgICAgICAgICAgICAgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgICAgICAgICAgICAgaWNvbi5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgb3B0aW9ucy5pbWFnZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG9wdGlvbnMuaWNvbikge1xuICAgICAgICAgICAgICAgIGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaVwiKTtcbiAgICAgICAgICAgICAgICBpY29uLmNsYXNzTGlzdC5hZGQoXCJ0aVwiLCBgdGktJHtvcHRpb25zLmljb259YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoZWFkZXIuYXBwZW5kQ2hpbGQoaWNvbik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDcmVhdGUgdGhlIHRpdGxlIGVsZW1lbnQgaW4gdGhlIGhlYWRlclxuICAgICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICB0aXRsZS50ZXh0Q29udGVudCA9IG9wdGlvbnMudHlwZSA9PT0gXCJhdHVpLW1pbmlcIiA/IG9wdGlvbnMudGV4dCA6IG9wdGlvbnMudGl0bGU7XG4gICAgICAgIGhlYWRlci5hcHBlbmRDaGlsZCh0aXRsZSk7XG5cbiAgICAgICAgbm90aWZpY2F0aW9uLmFwcGVuZENoaWxkKGhlYWRlcik7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMudHlwZSAhPT0gXCJhdHVpLW1pbmlcIikge1xuICAgICAgICAgICAgLy8gQ3JlYXRlIHRoZSBzZWN0aW9uIGVsZW1lbnRcbiAgICAgICAgICAgIGNvbnN0IHNlY3Rpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VjdGlvblwiKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICAgICAgICAgIGNvbnRlbnQuaW5uZXJIVE1MID0gb3B0aW9ucy50ZXh0O1xuICAgICAgICAgICAgc2VjdGlvbi5hcHBlbmRDaGlsZChjb250ZW50KTtcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5hcHBlbmRDaGlsZChzZWN0aW9uKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENyZWF0ZSB0aGUgZm9vdGVyIGVsZW1lbnRcbiAgICAgICAgY29uc3QgZm9vdGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvb3RlclwiKTtcbiAgICAgICAgb3B0aW9ucy5idXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgICAgICAgICAgY29uc3QgYnV0dG9uRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJ2a0J1dHRvblwiLCBcInN0eWxlQWNjZW50XCIpO1xuICAgICAgICAgICAgaWYgKGJ1dHRvbi5zdHlsZSAmJiBidXR0b24uc3R5bGUgIT09IFwiXCIpIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChgc3R5bGUke2J1dHRvbi5zdHlsZX1gKTtcbiAgICAgICAgICAgIGNvbnN0IGJ1dHRvblRleHRFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgICAgICBidXR0b25UZXh0RWxlbWVudC50ZXh0Q29udGVudCA9IGJ1dHRvbi50ZXh0O1xuICAgICAgICAgICAgYnV0dG9uRWxlbWVudC5hcHBlbmRDaGlsZChidXR0b25UZXh0RWxlbWVudCk7XG4gICAgICAgICAgICBidXR0b25FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgYnV0dG9uLmFjdGlvbigpO1xuICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5yZW1vdmUoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZm9vdGVyLmFwcGVuZENoaWxkKGJ1dHRvbkVsZW1lbnQpO1xuICAgICAgICB9KTtcbiAgICAgICAgbm90aWZpY2F0aW9uLmFwcGVuZENoaWxkKGZvb3Rlcik7XG5cbiAgICAgICAgLy8gRGlzcGxheSB0aGUgbm90aWZpY2F0aW9uXG4gICAgICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnZrTm90aWZpY2F0aW9uQ29udGFpbmVyXCIpO1xuICAgICAgICBpZiAoIWNvbnRhaW5lcikge1xuICAgICAgICAgICAgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwidmtOb3RpZmljYXRpb25Db250YWluZXJcIik7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgY29udGFpbmVyLmluc2VydEJlZm9yZShub3RpZmljYXRpb24sIGNvbnRhaW5lci5maXJzdENoaWxkKTtcblxuICAgICAgICBpZiAob3B0aW9ucy5jbG9zZSAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGxldCBtb3VzZU92ZXIgPSBmYWxzZTtcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5hZGRFdmVudExpc3RlbmVyKFwibW91c2VlbnRlclwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgbW91c2VPdmVyID0gdHJ1ZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbm90aWZpY2F0aW9uLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBtb3VzZU92ZXIgPSBmYWxzZTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAobW91c2VPdmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb24ucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIG9wdGlvbnMuY2xvc2UgfHwgNTAwMCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhc3luYyBmdW5jdGlvbiB2ZXJpZnlQZXJtaXNzaW9uKCkge1xuICAgICAgICBpZiAoTm90aWZpY2F0aW9uLnBlcm1pc3Npb24gPT09IFwiZ3JhbnRlZFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGF3YWl0IE5vdGlmaWNhdGlvbi5yZXF1ZXN0UGVybWlzc2lvbigpO1xuICAgICAgICAgICAgaWYgKE5vdGlmaWNhdGlvbi5wZXJtaXNzaW9uID09PSBcImdyYW50ZWRcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB2ZXJpZnlQZXJtaXNzaW9uKCkudGhlbigocGVybWlzc2lvbikgPT4ge1xuICAgICAgICAvLyBFbnN1cmUgbm90aWZpY2F0aW9uIHBlcm1pc3Npb24gaXMgZ3JhbnRlZFxuICAgICAgICBpZiAoIXBlcm1pc3Npb24pIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKFwiTm90aWZpY2F0aW9uIGNhbm5vdCBiZSBkaXNwbGF5ZWQgYmVjYXVzZSBwZXJtaXNzaW9uIGhhcyBiZWVuIGRlbmllZC5cIik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBBc3NlcnQgbm90aWZpY2F0aW9uIG9wdGlvbnNcbiAgICAgICAgaWYgKCghb3B0aW9ucy50aXRsZSB8fCBvcHRpb25zLnRpdGxlID09PSBcIlwiKSAmJiBvcHRpb25zLnR5cGUgIT09IFwiYXR1aS1taW5pXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKFwiTm90aWZpY2F0aW9uIHNob3VsZCBoYXZlIGEgdGl0bGUuXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gRGlzcGxheSB0aGUgbm90aWZpY2F0aW9uXG4gICAgICAgIGlmIChvcHRpb25zLnR5cGUgPT09IFwic3lzdGVtXCIpIHtcbiAgICAgICAgICAgIHN5c3RlbVB1c2goKTtcbiAgICAgICAgfSBlbHNlIGlmIChvcHRpb25zLnR5cGUuc3RhcnRzV2l0aChcImF0dWlcIikpIHtcbiAgICAgICAgICAgIGludGVyblB1c2goKTtcbiAgICAgICAgICAgIGlmICghKFwic291bmRcIiBpbiBvcHRpb25zKSkge1xuICAgICAgICAgICAgICAgIC8vIERlZmF1bHQgc291bmRcbiAgICAgICAgICAgICAgICBjb25zdCBzb3VuZCA9IG5ldyBBdWRpbyh2a05vdGlmaWNhdGlvblNvdW5kKTtcbiAgICAgICAgICAgICAgICBzb3VuZC5wbGF5KCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG9wdGlvbnMuc291bmQpIHtcbiAgICAgICAgICAgICAgICAvLyBDdXN0b20gc3BlY2lmaWMgc291bmRcbiAgICAgICAgICAgICAgICBjb25zdCBzb3VuZCA9IG5ldyBBdWRpbyhvcHRpb25zLnNvdW5kKTtcbiAgICAgICAgICAgICAgICBzb3VuZC5wbGF5KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBOb3RpZmljYXRpb24gdHlwZSAke29wdGlvbnMudHlwZX0gZG9lc24ndCBleGlzdC5gKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxubGV0IHZrTm90aWZpY2F0aW9uU291bmQgPSBcImF0dWkva2VybmVsL2Fzc2V0cy9ub3RpZmljYXRpb24ubXAzXCI7IC8qIGVzbGludC1kaXNhYmxlLWxpbmUgcHJlZmVyLWNvbnN0ICovXG5cbi8qIENhcm91c2VsICovXG5cbi8vIEhlaWdodCBzdXBlcnBvc2l0aW9uIGJldHdlZW4gaGVhZGVyIGFuZCBjYXJvdXNlbFxuXG5jb25zdCB2a0hlYWRlckZpeENhcm91c2VsID0gKCkgPT4ge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIudmtIZWFkZXIuc3R5bGVDYXJvdXNlbFwiKS5mb3JFYWNoKChoZWFkZXIpID0+IHtcbiAgICAgICAgY29uc3QgY2Fyb3VzZWwgPSB2a0Nsb3Nlc3QoaGVhZGVyLCBcIi52a0Nhcm91c2VsXCIsIFwiLnZrU3RydWN0dXJlQm9keUNvbnRlbnRcIilbMF07XG4gICAgICAgIGNvbnN0IGNhcm91c2VsQ29udGVudCA9IHZrQ2xvc2VzdChjYXJvdXNlbCwgXCIudmtDYXJvdXNlbFNsaWRlcyA+IGRpdiA+IGRpdlwiLCBcIi52a0Nhcm91c2VsXCIpO1xuICAgICAgICBjb25zdCBjYXJvdXNlbENvbnRyb2xzID0gY2Fyb3VzZWwucXVlcnlTZWxlY3RvcihcIi52a0Nhcm91c2VsQ29udHJvbHNcIik7XG5cbiAgICAgICAgY2Fyb3VzZWwuc3R5bGUubWluSGVpZ2h0ID0gaGVhZGVyLm9mZnNldEhlaWdodCAqIDIgKyBcInB4XCI7XG4gICAgICAgIGNhcm91c2VsQ29udGVudC5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICAgICAgICBlbGVtZW50LnN0eWxlLnBhZGRpbmdCbG9ja1N0YXJ0ID0gaGVhZGVyLm9mZnNldEhlaWdodCArIDIwICsgXCJweFwiO1xuICAgICAgICB9KTtcbiAgICAgICAgY2Fyb3VzZWxDb250cm9scy5zdHlsZS5tYXJnaW5CbG9ja1N0YXJ0ID0gaGVhZGVyLm9mZnNldEhlaWdodCArIFwicHhcIjtcbiAgICB9KTtcbn07XG52a0hlYWRlckZpeENhcm91c2VsKCk7XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB2a0hlYWRlckZpeENhcm91c2VsKTtcblxuLy8gQ29udHJvbHNcblxuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi52a0Nhcm91c2VsXCIpLmZvckVhY2goKGNhcm91c2VsKSA9PiB7XG4gICAgY29uc3Qgc2xpZGVzQ29udGFpbmVyID0gY2Fyb3VzZWwucXVlcnlTZWxlY3RvcihcIi52a0Nhcm91c2VsU2xpZGVzXCIpO1xuICAgIGNvbnN0IGNvbnRyb2xzID0gY2Fyb3VzZWwucXVlcnlTZWxlY3RvcihcIi52a0Nhcm91c2VsQ29udHJvbHNcIik7XG4gICAgY29uc3QgY29udHJvbHNMZWZ0ID0gY29udHJvbHM/LnF1ZXJ5U2VsZWN0b3IoXCIudmtDYXJvdXNlbENvbnRyb2xzTGVmdFwiKTtcbiAgICBjb25zdCBjb250cm9sc1JpZ2h0ID0gY29udHJvbHM/LnF1ZXJ5U2VsZWN0b3IoXCIudmtDYXJvdXNlbENvbnRyb2xzUmlnaHRcIik7XG4gICAgY29udHJvbHNMZWZ0Py5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBzbGlkZXNDb250YWluZXIuc2Nyb2xsQnkoe1xuICAgICAgICAgICAgbGVmdDogLXNsaWRlc0NvbnRhaW5lci5vZmZzZXRXaWR0aCxcbiAgICAgICAgICAgIGJlaGF2aW9yOiBcInNtb290aFwiLFxuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICBjb250cm9sc1JpZ2h0Py5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBzbGlkZXNDb250YWluZXIuc2Nyb2xsQnkoe1xuICAgICAgICAgICAgbGVmdDogc2xpZGVzQ29udGFpbmVyLm9mZnNldFdpZHRoLFxuICAgICAgICAgICAgYmVoYXZpb3I6IFwic21vb3RoXCIsXG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG5cbi8qIE1vZGFsICovXG5cbmZ1bmN0aW9uIHZrTW9kYWxTaG93KG1vZGFsSWQpIHtcbiAgICBjb25zdCBtb2RhbEJhY2tncm91bmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChtb2RhbElkKTtcbiAgICBtb2RhbEJhY2tncm91bmQuY2xhc3NMaXN0LmFkZChcInN0YXR1c1Nob3dcIik7XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVDbGlja091dHNpZGVNb2RhbChldmVudCkge1xuICAgICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSBtb2RhbEJhY2tncm91bmQpIHtcbiAgICAgICAgICAgIG1vZGFsQmFja2dyb3VuZC5jbGFzc0xpc3QucmVtb3ZlKFwic3RhdHVzU2hvd1wiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVDbGlja091dHNpZGVNb2RhbCk7XG59XG5cbi8qIFRhYnMgKi9cblxuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi52a1RhYnNcIikuZm9yRWFjaCgodGFic0NvbnRhaW5lcikgPT4ge1xuICAgIGNvbnN0IHRhYnNIZWFkZXIgPSB0YWJzQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoXCIudmtUYWJzSGVhZGVyXCIpO1xuICAgIGNvbnN0IHRhYnNIZWFkZXJMaW5rcyA9IHRhYnNIZWFkZXIucXVlcnlTZWxlY3RvckFsbChcImFcIik7XG4gICAgY29uc3QgdGFic0NvbnRlbnQgPSB0YWJzQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoXCIudmtUYWJzQ29udGVudFwiKTtcbiAgICBjb25zdCB0YWJzQ29udGVudFRleHRzID0gdGFic0NvbnRlbnQucXVlcnlTZWxlY3RvckFsbChcImRpdlwiKTtcblxuICAgIHRhYnNIZWFkZXJMaW5rcy5mb3JFYWNoKChsaW5rKSA9PiB7XG4gICAgICAgIGxpbmsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgIHRhYnNIZWFkZXJMaW5rcy5mb3JFYWNoKCh0YWIpID0+IHtcbiAgICAgICAgICAgICAgICB0YWIuY2xhc3NMaXN0LnJlbW92ZShcInN0YXR1c0FjdGl2ZVwiKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGFic0NvbnRlbnRUZXh0cy5mb3JFYWNoKChjb250ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgY29udGVudC5jbGFzc0xpc3QucmVtb3ZlKFwic3RhdHVzQWN0aXZlXCIpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGxpbmsuY2xhc3NMaXN0LmFkZChcInN0YXR1c0FjdGl2ZVwiKTtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGxpbmsuZ2V0QXR0cmlidXRlKFwiZGF0YS10YWJzLWFzc2lnblwiKSkuY2xhc3NMaXN0LmFkZChcInN0YXR1c0FjdGl2ZVwiKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59KTtcblxuLyogQWNjb3JkaW9uICovXG5cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIudmtBY2NvcmRpb25cIikuZm9yRWFjaCgoYWNjb3JkaW9uKSA9PiB7XG4gICAgY29uc3QgaGVhZGVyID0gYWNjb3JkaW9uLnF1ZXJ5U2VsZWN0b3IoXCJoZWFkZXJcIik7XG4gICAgY29uc3QgYnV0dG9uID0gaGVhZGVyLnF1ZXJ5U2VsZWN0b3IoXCJpXCIpO1xuICAgIGNvbnN0IGNvbnRlbnQgPSBhY2NvcmRpb24ucXVlcnlTZWxlY3RvcihcInNlY3Rpb25cIik7XG4gICAgaGVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGlmICh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShjb250ZW50KS5kaXNwbGF5ID09PSBcIm5vbmVcIikge1xuICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICAgICAgYnV0dG9uLnN0eWxlLnRyYW5zZm9ybSA9IFwicm90YXRlKDE4MGRlZylcIjtcbiAgICAgICAgfSBlbHNlIGlmICh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShjb250ZW50KS5kaXNwbGF5ID09PSBcImJsb2NrXCIpIHtcbiAgICAgICAgICAgIGNvbnRlbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgYnV0dG9uLnN0eWxlLnRyYW5zZm9ybSA9IFwicm90YXRlKDBkZWcpXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQW4gdW5leHBlY3RlZCBlcnJvciBoYXMgb2NjdXJyZWQuXCIpO1xuICAgICAgICB9XG4gICAgfSk7XG59KTtcblxuLyogU2Nyb2xsdG9wICovXG5cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIudmtTY3JvbGx0b3BcIikuZm9yRWFjaCgoYnV0dG9uKSA9PiB7XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5zY3JvbGxUbyh7XG4gICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgKCkgPT4ge1xuICAgICAgICBpZiAod2luZG93LnNjcm9sbFkgPiB3aW5kb3cuaW5uZXJIZWlnaHQpIHtcbiAgICAgICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwic3RhdHVzQWN0aXZlXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXCJzdGF0dXNBY3RpdmVcIik7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiYUFFQSxLQUFNLENBQUFBLFNBQVMsQ0FBRyxZQUFZLENBRTlCQyxRQUFRLENBQUNDLGdCQUFnQixDQUFDLGtCQUFrQixDQUFDLENBQUNDLE9BQU8sQ0FBRUMsQ0FBSSxFQUFLLENBQzVEQSxDQUFJLENBQUNDLFlBQVksQ0FBQyxNQUFNLENBQUUsb0NBQW9DLENBQUMsQ0FDL0RELENBQUksQ0FBQ0MsWUFBWSxDQUFDLFFBQVEsQ0FBRSxRQUFRLENBQUMsQ0FDckNELENBQUksQ0FBQ0UsV0FBVyxDQUFJLG9DQUFtQ04sU0FBVSxHQUNyRSxDQUFDLENBQUMsQ0FFRixRQUFTLENBQUFPLGdCQUFnQkEsQ0FBQSxDQUFHLENBQ3hCQyxPQUFPLENBQUNDLElBQUksQ0FBRSxvQ0FBbUNULFNBQVUsdUNBQXNDLENB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