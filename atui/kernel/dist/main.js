"use strict";const atuiKernel_Version="0.4.2";document.querySelectorAll(".atuiKernel_LicensingAtui").forEach(a=>{a.setAttribute("href","https://github.com/alcapitan/atui/"),a.setAttribute("target","_blank"),a.textContent=`This website is powered by ATUI v${atuiKernel_Version}.`});function atuiKernel_PrintAtuiLicensing(){console.info(`This website is powered by ATUI v${atuiKernel_Version} (https://github.com/alcapitan/atui).`)}atuiKernel_PrintAtuiLicensing();function atuiKernel_ToolsFindElement(a,b){let c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;return 1===a.querySelectorAll(b).length?[a.querySelector(b)]:1<a.querySelectorAll(b).length?Array.from(a.querySelectorAll(b)):Array.from(document.querySelectorAll(b)).includes(a)?[a]:Array.from(document.querySelectorAll(c)).includes(a)?(console.error(`No "${b}" element was found in "${c}".`),[]):null===a.parentNode?(console.error(`No "${b}" element was found in the webpage.`),[]):atuiKernel_ToolsFindElement(a.parentNode,b,c)}async function verifyLink(a){const b=await fetch(a);return!!b.ok}function convertTime(a){var b=Math.floor;const c=b(a/3600);let d=b(a%3600/60),e=b(a%60);return 10>e&&(e="0"+e),c?(10>d&&(d="0"+d),c+":"+d+":"+e):d+":"+e}function atuiKernel_ClipboardCopy(a){navigator.clipboard.writeText(a)}function atuiKernel_ClipboardPaste(){return navigator.clipboard.readText()}function atuiKernel_ShareTool(a,b,c){navigator.share({title:a,text:b,url:c})}function atuiKernel_StorageSet(a,b,c){var d=Math.floor;function e(a,b){const c=b.match(/^(\d+)([dhm])$/);if(!c)throw new Error("Invalid duration format. Use Xd, Xh, or Xm (X being a positive integer).");const d=parseInt(c[1]),e=c[2];if(isNaN(d)||0>=d)throw new Error("The quantity of time must be a positive integer.");const f=new Date(a.getTime());switch(e){case"d":f.setDate(f.getDate()+d);break;case"h":f.setTime(f.getTime()+1e3*(60*(60*d)));break;case"m":f.setTime(f.getTime()+1e3*(60*d));break;default:throw new Error("Invalid time unit. Use 'd' (= days), 'h' (= hours), or 'm' (= minutes).")}return f}let f=3<arguments.length&&arguments[3]!==void 0?arguments[3]:"30d";switch(c){case"local":try{return localStorage.setItem(a,JSON.stringify(b)),!0}catch(a){return console.error("Error when handling localStorage :",a),!1}case"session":try{return sessionStorage.setItem(a,JSON.stringify(b)),!0}catch(a){return console.error("Error when handling sessionStorage :",a),!1}case"cookie":try{let c=`${encodeURIComponent(a)}=${encodeURIComponent(JSON.stringify(b))}`;const g=e(new Date,f),h=d((g-new Date)/1e3);return c+=`;max-age=${h}`,document.cookie=c,!0}catch(a){return console.error("Error when handling cookies :",a),!1}default:return console.error("This storage tool unavailable (check spelling) :",c),!1}}function atuiKernel_StorageGet(a,b){function c(a){try{return JSON.parse(a)}catch(b){return"undefined"===a?void 0:a}}switch(b){case"local":try{const b=localStorage.getItem(a);return null===b?null:c(b)}catch(a){return console.error("Error when handling localStorage :",a),null}case"session":try{const b=sessionStorage.getItem(a);return null===b?null:c(b)}catch(a){return console.error("Error when handling sessionStorage :",a),null}case"cookie":try{const b=document.cookie.split(";");for(const d of b){const[b,e]=d.split("=");if(decodeURIComponent(b.trim())===a){const a=decodeURIComponent(e.trim());return c(a)}}return null}catch(a){return console.error("Error when handling cookies :",a),null}default:return console.error("This storage tool unavailable (check spelling) :",b),null}}function atuiKernel_StorageRemove(a,b){switch(b){case"local":try{return localStorage.removeItem(a),!0}catch(a){return console.error("Error when handling localStorage :",a),!1}case"session":try{return sessionStorage.removeItem(a),!0}catch(a){return console.error("Error when handling sessionStorage :",a),!1}case"cookie":try{return document.cookie=`${encodeURIComponent(a)}=; expires=Thu, 01 Jan 1970 00:00:00 GMT;`,!0}catch(a){return console.error("Error when handling cookies :",a),!1}default:return console.error("This storage tool unavailable (check spelling) :",b),!1}}function atuiKernel_ColormodeIsDark(){return"dark"===document.documentElement.getAttribute("data-atui-colormode")}function atuiKernel_ColormodeToggle(){document.querySelectorAll(".atuiKernel_ColormodeButton").forEach(a=>{atuiKernel_ColormodeIsDark()?(document.documentElement.setAttribute("data-atui-colormode","light"),a.classList.replace("ti-moon","ti-sun")):(document.documentElement.setAttribute("data-atui-colormode","dark"),a.classList.replace("ti-sun","ti-moon"))}),atuiKernel_StorageSet("atuiKernel_ColormodeIsDark",atuiKernel_ColormodeIsDark(),"local")}function atuiKernel_ColormodeStartup(){const a=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches;if(a)return atuiKernel_ColormodeToggle(),console.info("Dark mode enabled according to the system preferences."),!0;const b=atuiKernel_StorageGet("atuiKernel_ColormodeIsDark","local");return b&&(atuiKernel_ColormodeToggle(),console.info("Dark mode enabled according to the memory.")),!1}atuiKernel_ColormodeStartup(),document.querySelectorAll(".atuiKernel_ColormodeButton").forEach(a=>{a.addEventListener("click",()=>{atuiKernel_ColormodeToggle()})});function atuiKernel_ColoraccentMetatag(){let a=document.querySelector("meta[name=\"data-atui-colormode\"]");a||(a=document.createElement("meta"),a.setAttribute("name","theme-color"),document.head.appendChild(a)),a.setAttribute("content",`hsl(${getComputedStyle(document.documentElement).getPropertyValue("--atuiKernel_Color-A40")})`)}function atuiKernel_PopupSetup(a){function b(b){g.contains(b.target)||a.contains(b.target)||d(g)}function c(){f(a,g,h)}function d(a){document.removeEventListener("scroll",c),window.removeEventListener("resize",c),document.removeEventListener("click",b),a.style.visibility="hidden"}function e(a){a.style.visibility="visible"}function f(a,b,c){b.style.left="0",b.style.top="0";const d={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight},e=a.getBoundingClientRect(),f=b.getBoundingClientRect(),g=e.left+f.width>d.width,h=e.top+f.height>d.height,i={left:0,top:0};i.left="centered"===c.type||"centered-hor"===c.type?(d.width-f.width)/2:g?e.right-f.left-f.width-5:e.left-f.left+5,i.top="centered"===c.type||"centered-ver"===c.type?(d.height-f.height)/2:h?e.top-f.top-f.height+5:e.bottom-f.top-5,b.style.left=i.left+"px",b.style.top=i.top+"px"}const g=atuiKernel_ToolsFindElement(a,a.getAttribute("data-vk-popup-assign"))[0],h={type:"default",triggerEvent:"mouseover",outEvent:"click"};g.classList.contains("atuiKernel_PopupGlobalpanel")&&(h.type="centered-hor"),a.classList.contains("optionRightclick")&&(h.triggerEvent="contextmenu"),a.addEventListener(h.triggerEvent,i=>{"contextmenu"===h.triggerEvent&&i.preventDefault(),document.querySelectorAll(".atuiKernel_PopupContextmenu, .atuiKernel_PopupTooltip, .atuiKernel_PopupGlobalpanel").forEach(a=>{d(a)}),f(a,g,h),e(g),document.addEventListener("scroll",c),window.addEventListener("resize",c),document.addEventListener(h.outEvent,a=>{b(a)})})}document.querySelectorAll("[data-vk-popup-assign]").forEach(a=>{atuiKernel_PopupSetup(a)});function atuiKernel_NotificationPush(a){function b(){const b=new Notification(a.title,{body:a.text||"",icon:a.image?a.image:a.icon?`https://cdn.jsdelivr.net/npm/@tabler/icons/icons/${a.icon}.svg`:""});b.onclick=b=>{a.link&&""!==a.link&&(b.preventDefault(),window.open(a.link))}}function c(){const b=document.createElement("div");b.classList.add("atuiKernel_Notification"),"atui-mini"===a.type&&b.classList.add("optionMini");const c=document.createElement("header");let d;(a.image||a.icon)&&(a.image?(d=document.createElement("img"),d.setAttribute("src",a.image)):a.icon&&(d=document.createElement("i"),d.classList.add("ti",`ti-${a.icon}`)),c.appendChild(d));const e=document.createElement("p");if(e.textContent="atui-mini"===a.type?a.text:a.title,c.appendChild(e),b.appendChild(c),"atui-mini"!==a.type){const c=document.createElement("section"),d=document.createElement("p");d.innerHTML=a.text,c.appendChild(d),b.appendChild(c)}const f=document.createElement("footer");a.buttons.forEach(a=>{const c=document.createElement("div");c.classList.add("atuiKernel_Button","optionAccent"),a.option&&""!==a.option&&c.classList.add(`option${a.option}`);const d=document.createElement("p");d.textContent=a.text,c.appendChild(d),c.addEventListener("click",()=>{a.action(),b.remove()}),f.appendChild(c)}),b.appendChild(f);let g=document.querySelector(".atuiKernel_NotificationContainer");if(g||(g=document.createElement("div"),g.classList.add("atuiKernel_NotificationContainer"),document.body.appendChild(g)),g.insertBefore(b,g.firstChild),!1!==a.close){let c=!1;b.addEventListener("mouseenter",()=>{c=!0}),b.addEventListener("mouseleave",()=>{c=!1}),setTimeout(()=>{c?b.addEventListener("mouseleave",()=>{setTimeout(()=>{b.remove()},2e3)}):b.remove()},a.close||5e3)}}(async function(){return!("granted"!==Notification.permission)||(await Notification.requestPermission(),"granted"===Notification.permission)})().then(d=>{if(!d)return console.error("Notification cannot be displayed because permission has been denied.");if((!a.title||""===a.title)&&"atui-mini"!==a.type)return console.error("Notification should have a title.");if("system"===a.type)b();else if(!a.type.startsWith("atui"))console.error(`Notification type ${a.type} doesn't exist.`);else if(c(),!("sound"in a)){const a=new Audio(atuiKernel_NotificationSound);a.play()}else if(a.sound){const b=new Audio(a.sound);b.play()}})}let atuiKernel_NotificationSound="atui/kernel/assets/notification.mp3";const atuiKernel_HeaderFixCarousel=()=>{document.querySelectorAll(".atuiKernel_Header.optionCarousel").forEach(a=>{const b=atuiKernel_ToolsFindElement(a,".atuiKernel_Carousel",".atuiKernel_BodyContent")[0],c=atuiKernel_ToolsFindElement(b,".atuiKernel_CarouselSlides > div > div",".atuiKernel_Carousel"),d=b.querySelector(".atuiKernel_CarouselControls");b.style.minHeight=2*a.offsetHeight+"px",c.forEach(b=>{b.style.paddingTop=a.offsetHeight+20+"px"}),d.style.marginTop=a.offsetHeight+"px"})};atuiKernel_HeaderFixCarousel(),window.addEventListener("resize",atuiKernel_HeaderFixCarousel),document.querySelectorAll(".atuiKernel_Carousel").forEach(a=>{const b=a.querySelector(".atuiKernel_CarouselSlides"),c=a.querySelector(".atuiKernel_CarouselControls"),d=c?.querySelector(".atuiKernel_CarouselControlsLeft"),e=c?.querySelector(".atuiKernel_CarouselControlsRight");d?.addEventListener("click",()=>{b.scrollBy({left:-b.offsetWidth,behavior:"smooth"})}),e?.addEventListener("click",()=>{b.scrollBy({left:b.offsetWidth,behavior:"smooth"})})});function atuiKernel_ModalShow(a){const b=document.getElementById(a);b.classList.add("optionShow"),document.addEventListener("click",function(a){a.target===b&&b.classList.remove("optionShow")})}document.querySelectorAll(".atuiKernel_SectionTabs").forEach(a=>{const b=a.querySelector(".atuiKernel_SectionTabsHeader"),c=b.querySelectorAll("a"),d=a.querySelector(".atuiKernel_SectionTabsContent"),e=d.querySelectorAll("div");c.forEach(a=>{a.addEventListener("click",()=>{c.forEach(a=>{a.classList.remove("optionActive")}),e.forEach(a=>{a.classList.remove("optionActive")}),a.classList.add("optionActive"),document.getElementById(a.getAttribute("data-tabs-assign")).classList.add("optionActive")})})}),document.querySelectorAll(".atuiKernel_SectionAccordion").forEach(a=>{const b=a.querySelector("header"),c=b.querySelector("i"),d=a.querySelector("section");b.addEventListener("click",()=>{"none"===window.getComputedStyle(d).display?(d.style.display="block",c.style.transform="rotate(180deg)"):"block"===window.getComputedStyle(d).display?(d.style.display="none",c.style.transform="rotate(0deg)"):console.error("An unexpected error has occurred.")})}),document.querySelectorAll(".atuiKernel_Scrolltop").forEach(a=>{a.addEventListener("click",()=>{window.scrollTo({top:0})}),window.addEventListener("scroll",()=>{window.scrollY>window.innerHeight?a.classList.add("optionActive"):a.classList.remove("optionActive")})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhdHVpS2VybmVsX1ZlcnNpb24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwibGluayIsInNldEF0dHJpYnV0ZSIsInRleHRDb250ZW50IiwiYXR1aUtlcm5lbF9QcmludEF0dWlMaWNlbnNpbmciLCJjb25zb2xlIiwiaW5mbyIsImF0dWlLZXJuZWxfVG9vbHNGaW5kRWxlbWVudCIsImVsZW1lbnQiLCJxdWVyeSIsInN0b3AiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJxdWVyeVNlbGVjdG9yIiwiQXJyYXkiLCJmcm9tIiwiaW5jbHVkZXMiLCJlcnJvciIsInBhcmVudE5vZGUiLCJ2ZXJpZnlMaW5rIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiY29udmVydFRpbWUiLCJ0aW1lIiwiYiIsIk1hdGgiLCJmbG9vciIsImhvdXJzIiwibWlucyIsInNlY3MiLCJhdHVpS2VybmVsX0NsaXBib2FyZENvcHkiLCJ0ZXh0IiwibmF2aWdhdG9yIiwiY2xpcGJvYXJkIiwid3JpdGVUZXh0IiwiYXR1aUtlcm5lbF9DbGlwYm9hcmRQYXN0ZSIsInJlYWRUZXh0IiwiYXR1aUtlcm5lbF9TaGFyZVRvb2wiLCJ0aXRsZSIsInNoYXJlIiwiYXR1aUtlcm5lbF9TdG9yYWdlU2V0Iiwia2V5IiwidmFsdWUiLCJ0b29sIiwiZCIsImFkZER1cmF0aW9uVG9EYXRlIiwiZGF0ZSIsImR1cmF0aW9uIiwibWF0Y2giLCJFcnJvciIsInF1YW50aXR5IiwicGFyc2VJbnQiLCJ1bml0IiwiaXNOYU4iLCJkYXRlQ29weSIsIkRhdGUiLCJnZXRUaW1lIiwic2V0RGF0ZSIsImdldERhdGUiLCJzZXRUaW1lIiwibGlmZXRpbWUiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiSlNPTiIsInN0cmluZ2lmeSIsInNlc3Npb25TdG9yYWdlIiwiY29va2llIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZXhwaXJhdGlvbkRhdGUiLCJtYXhBZ2VJblNlY29uZHMiLCJhdHVpS2VybmVsX1N0b3JhZ2VHZXQiLCJjb252ZXJ0VG9Mb2dpY2FsVHlwZSIsInBhcnNlIiwiZGF0YSIsImdldEl0ZW0iLCJjb29raWVzIiwic3BsaXQiLCJjb29raWVOYW1lIiwiY29va2llVmFsdWUiLCJkZWNvZGVVUklDb21wb25lbnQiLCJ0cmltIiwiYXR1aUtlcm5lbF9TdG9yYWdlUmVtb3ZlIiwicmVtb3ZlSXRlbSIsImF0dWlLZXJuZWxfQ29sb3Jtb2RlSXNEYXJrIiwiZG9jdW1lbnRFbGVtZW50IiwiZ2V0QXR0cmlidXRlIiwiYXR1aUtlcm5lbF9Db2xvcm1vZGVUb2dnbGUiLCJidXR0b24iLCJjbGFzc0xpc3QiLCJyZXBsYWNlIiwiYXR1aUtlcm5lbF9Db2xvcm1vZGVTdGFydHVwIiwic3lzdGVtU3RhdHVzIiwid2luZG93IiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiLCJsb2NhbFN0YXR1cyIsImFkZEV2ZW50TGlzdGVuZXIiLCJhdHVpS2VybmVsX0NvbG9yYWNjZW50TWV0YXRhZyIsIm1ldGFUYWciLCJjcmVhdGVFbGVtZW50IiwiaGVhZCIsImFwcGVuZENoaWxkIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFByb3BlcnR5VmFsdWUiLCJhdHVpS2VybmVsX1BvcHVwU2V0dXAiLCJsaXN0ZW5lciIsImRldGVjdE91dHNpZGVDbGljayIsImV2ZW50IiwicG9wdXAiLCJjb250YWlucyIsInRhcmdldCIsImF0dWlLZXJuZWxfUG9wdXBIaWRlIiwiYXR1aUtlcm5lbF9Qb3B1cFJlbG9hZCIsImF0dWlLZXJuZWxfUG9wdXBQb3NpdGlvbiIsIm9wdGlvbnMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic3R5bGUiLCJ2aXNpYmlsaXR5IiwiYXR1aUtlcm5lbF9Qb3B1cERpc3BsYXkiLCJsZWZ0IiwidG9wIiwid2luZG93RGltZW5zaW9ucyIsIndpZHRoIiwiY2xpZW50V2lkdGgiLCJoZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJsaXN0ZW5lclBvc2l0aW9uIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwicG9wdXBQb3NpdGlvbiIsIm92ZXJmbG93UmlnaHQiLCJvdmVyZmxvd0JvdHRvbSIsImNhbGN1bGF0ZWRQb3NpdGlvbiIsInR5cGUiLCJyaWdodCIsImJvdHRvbSIsInRyaWdnZXJFdmVudCIsIm91dEV2ZW50IiwicHJldmVudERlZmF1bHQiLCJhdHVpS2VybmVsX05vdGlmaWNhdGlvblB1c2giLCJzeXN0ZW1QdXNoIiwibm90aWZpY2F0aW9uIiwiTm90aWZpY2F0aW9uIiwiYm9keSIsImljb24iLCJpbWFnZSIsIm9uY2xpY2siLCJvcGVuIiwiaW50ZXJuUHVzaCIsImFkZCIsImhlYWRlciIsInNlY3Rpb24iLCJjb250ZW50IiwiaW5uZXJIVE1MIiwiZm9vdGVyIiwiYnV0dG9ucyIsImJ1dHRvbkVsZW1lbnQiLCJvcHRpb24iLCJidXR0b25UZXh0RWxlbWVudCIsImFjdGlvbiIsInJlbW92ZSIsImNvbnRhaW5lciIsImluc2VydEJlZm9yZSIsImZpcnN0Q2hpbGQiLCJjbG9zZSIsIm1vdXNlT3ZlciIsInNldFRpbWVvdXQiLCJwZXJtaXNzaW9uIiwicmVxdWVzdFBlcm1pc3Npb24iLCJ0aGVuIiwic3RhcnRzV2l0aCIsInNvdW5kIiwiQXVkaW8iLCJhdHVpS2VybmVsX05vdGlmaWNhdGlvblNvdW5kIiwicGxheSIsImF0dWlLZXJuZWxfSGVhZGVyRml4Q2Fyb3VzZWwiLCJjYXJvdXNlbCIsImNhcm91c2VsQ29udGVudCIsImNhcm91c2VsQ29udHJvbHMiLCJtaW5IZWlnaHQiLCJvZmZzZXRIZWlnaHQiLCJwYWRkaW5nVG9wIiwibWFyZ2luVG9wIiwic2xpZGVzQ29udGFpbmVyIiwiY29udHJvbHMiLCJjb250cm9sc0xlZnQiLCJjb250cm9sc1JpZ2h0Iiwic2Nyb2xsQnkiLCJvZmZzZXRXaWR0aCIsImJlaGF2aW9yIiwiYXR1aUtlcm5lbF9Nb2RhbFNob3ciLCJtb2RhbElkIiwibW9kYWxCYWNrZ3JvdW5kIiwiZ2V0RWxlbWVudEJ5SWQiLCJ0YWJzQ29udGFpbmVyIiwidGFic0hlYWRlciIsInRhYnNIZWFkZXJMaW5rcyIsInRhYnNDb250ZW50IiwidGFic0NvbnRlbnRUZXh0cyIsInRhYiIsImFjY29yZGlvbiIsImRpc3BsYXkiLCJ0cmFuc2Zvcm0iLCJzY3JvbGxUbyIsInNjcm9sbFkiLCJpbm5lckhlaWdodCJdLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQVRVSSB2MC40LjIgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGNhcGl0YW4vYXR1aSlcbiAqIFRoaXMgY29kZSBpcyByZWxlYXNlZCB1bmRlciBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsY2FwaXRhbi9hdHVpL2Jsb2IvZGV2L0xJQ0VOU0UubWQpXG4gKi9cblxuLyogTGljZW5zaW5nICovXG5cbmNvbnN0IGF0dWlLZXJuZWxfVmVyc2lvbiA9IFwiMC40LjJcIjtcblxuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5hdHVpS2VybmVsX0xpY2Vuc2luZ0F0dWlcIikuZm9yRWFjaCgobGluaykgPT4ge1xuICAgIGxpbmsuc2V0QXR0cmlidXRlKFwiaHJlZlwiLCBcImh0dHBzOi8vZ2l0aHViLmNvbS9hbGNhcGl0YW4vYXR1aS9cIik7XG4gICAgbGluay5zZXRBdHRyaWJ1dGUoXCJ0YXJnZXRcIiwgXCJfYmxhbmtcIik7XG4gICAgbGluay50ZXh0Q29udGVudCA9IGBUaGlzIHdlYnNpdGUgaXMgcG93ZXJlZCBieSBBVFVJIHYke2F0dWlLZXJuZWxfVmVyc2lvbn0uYDtcbn0pO1xuXG5mdW5jdGlvbiBhdHVpS2VybmVsX1ByaW50QXR1aUxpY2Vuc2luZygpIHtcbiAgICBjb25zb2xlLmluZm8oYFRoaXMgd2Vic2l0ZSBpcyBwb3dlcmVkIGJ5IEFUVUkgdiR7YXR1aUtlcm5lbF9WZXJzaW9ufSAoaHR0cHM6Ly9naXRodWIuY29tL2FsY2FwaXRhbi9hdHVpKS5gKTtcbn1cbmF0dWlLZXJuZWxfUHJpbnRBdHVpTGljZW5zaW5nKCk7XG5cbi8qIEZpbmQgYXNzb2NpYXRlZCBlbGVtZW50ICovXG5cbmZ1bmN0aW9uIGF0dWlLZXJuZWxfVG9vbHNGaW5kRWxlbWVudChlbGVtZW50LCBxdWVyeSwgc3RvcCA9IG51bGwpIHtcbiAgICBpZiAoZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJ5KS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgLy8gSWYgZWxlbWVudCBoYXMgcXVlcnkuXG4gICAgICAgIHJldHVybiBbZWxlbWVudC5xdWVyeVNlbGVjdG9yKHF1ZXJ5KV07XG4gICAgfSBlbHNlIGlmIChlbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocXVlcnkpLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgLy8gSWYgZWxlbWVudCBoYXMgc2V2ZXJhbCBxdWVyaWVzLlxuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShlbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocXVlcnkpKTtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChxdWVyeSkpLmluY2x1ZGVzKGVsZW1lbnQpKSB7XG4gICAgICAgIC8vIElmIGVsZW1lbnQgaXMgcXVlcnkuXG4gICAgICAgIHJldHVybiBbZWxlbWVudF07XG4gICAgfSBlbHNlIGlmIChBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc3RvcCkpLmluY2x1ZGVzKGVsZW1lbnQpKSB7XG4gICAgICAgIC8vIElmIGVsZW1lbnQgaXMgc3RvcC5cbiAgICAgICAgY29uc29sZS5lcnJvcihgTm8gXCIke3F1ZXJ5fVwiIGVsZW1lbnQgd2FzIGZvdW5kIGluIFwiJHtzdG9wfVwiLmApO1xuICAgICAgICByZXR1cm4gW107XG4gICAgfSBlbHNlIGlmIChlbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICAgICAgLy8gSWYgZWxlbWVudCBpcyByb290LlxuICAgICAgICBjb25zb2xlLmVycm9yKGBObyBcIiR7cXVlcnl9XCIgZWxlbWVudCB3YXMgZm91bmQgaW4gdGhlIHdlYnBhZ2UuYCk7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBUaGUgcGFyZW50IG9mIGVsZW1lbnQgbWF5IGhhdmUgcXVlcnkuXG4gICAgICAgIHJldHVybiBhdHVpS2VybmVsX1Rvb2xzRmluZEVsZW1lbnQoZWxlbWVudC5wYXJlbnROb2RlLCBxdWVyeSwgc3RvcCk7XG4gICAgfVxufVxuXG4vKiBWZXJpZnkgbGluayAqL1xuXG5hc3luYyBmdW5jdGlvbiB2ZXJpZnlMaW5rKHVybCkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcbiAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cblxuLyogQ29udmVydCB0aW1lIGRhdGEgdG8gYmUgcmVhZGFibGUgYnkgaHVtYW5zICovXG5cbmZ1bmN0aW9uIGNvbnZlcnRUaW1lKHRpbWUpIHtcbiAgICBjb25zdCBob3VycyA9IE1hdGguZmxvb3IodGltZSAvIDM2MDApO1xuICAgIGxldCBtaW5zID0gTWF0aC5mbG9vcigodGltZSAlIDM2MDApIC8gNjApO1xuICAgIGxldCBzZWNzID0gTWF0aC5mbG9vcih0aW1lICUgNjApO1xuICAgIGlmIChzZWNzIDwgMTApIHtcbiAgICAgICAgc2VjcyA9IFwiMFwiICsgc2VjcztcbiAgICB9XG4gICAgaWYgKGhvdXJzKSB7XG4gICAgICAgIGlmIChtaW5zIDwgMTApIHtcbiAgICAgICAgICAgIG1pbnMgPSBcIjBcIiArIG1pbnM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhvdXJzICsgXCI6XCIgKyBtaW5zICsgXCI6XCIgKyBzZWNzOyAvLyBoaDptbTpzc1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBtaW5zICsgXCI6XCIgKyBzZWNzOyAvLyBtbTpzc1xuICAgIH1cbn1cblxuLyogQ2xpcGJvYXJkIHRvb2xzICovXG5cbmZ1bmN0aW9uIGF0dWlLZXJuZWxfQ2xpcGJvYXJkQ29weSh0ZXh0KSB7XG4gICAgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQodGV4dCk7XG59XG5cbmZ1bmN0aW9uIGF0dWlLZXJuZWxfQ2xpcGJvYXJkUGFzdGUoKSB7XG4gICAgcmV0dXJuIG5hdmlnYXRvci5jbGlwYm9hcmQucmVhZFRleHQoKTtcbn1cblxuLyogU2hhcmUgdG9vbCAqL1xuXG5mdW5jdGlvbiBhdHVpS2VybmVsX1NoYXJlVG9vbCh0aXRsZSwgdGV4dCwgdXJsKSB7XG4gICAgbmF2aWdhdG9yLnNoYXJlKHtcbiAgICAgICAgdGl0bGUsXG4gICAgICAgIHRleHQsXG4gICAgICAgIHVybCxcbiAgICB9KTtcbn1cblxuLyogRGF0YSBzdG9yYWdlICovXG5cbi8qKlxuICogQ3JlYXRlIG9yIHVwZGF0ZSBkYXRhIHN0b3JlZCBpbiB0aGUgdXNlcidzIGRldmljZSAod2l0aCBsb2NhbFN0b3JhZ2UsIHNlc3Npb25TdG9yYWdlLCBvciBjb29raWVzKS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgLSBUaGUga2V5IHRvIGlkZW50aWZ5IHRoZSBkYXRhLlxuICogQHBhcmFtIHsqfSB2YWx1ZSAtIFRoZSBkYXRhIHRvIGJlIHNhdmVkLlxuICogQHBhcmFtIHtzdHJpbmd9IHRvb2wgLSBUaGUgc3RvcmFnZSB0b29sIHRvIHVzZTogXCJsb2NhbFwiIChtZWFucyBsb2NhbFN0b3JhZ2UpLCBcInNlc3Npb25cIiAobWVhbnMgc2Vzc2lvblN0b3JhZ2UpLCBvciBcImNvb2tpZVwiLlxuICogQHBhcmFtIHtzdHJpbmd9IFtsaWZldGltZT1cIjMwZFwiXSAtIFRoZSBkYXRhJ3MgbGlmZXRpbWUgKG9ubHkgZm9yIFwiY29va2llXCIgc3RvcmFnZSkgKFwiMzdtXCIgbWVhbnMgMzcgbWludXRlcywgXCI0aFwiIG1lYW5zIDQgaG91cnMgYW5kIFwiOGRcIiBtZWFucyA4IGRheXMpLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgdHJ1ZSBpZiB0aGUgZGF0YSB3YXMgc2F2ZWQgc3VjY2Vzc2Z1bGx5LCBvdGhlcndpc2UgZmFsc2UuXG4gKi9cbmZ1bmN0aW9uIGF0dWlLZXJuZWxfU3RvcmFnZVNldChrZXksIHZhbHVlLCB0b29sLCBsaWZldGltZSA9IFwiMzBkXCIpIHtcbiAgICBmdW5jdGlvbiBhZGREdXJhdGlvblRvRGF0ZShkYXRlLCBkdXJhdGlvbikge1xuICAgICAgICBjb25zdCByZWdleCA9IC9eKFxcZCspKFtkaG1dKSQvO1xuICAgICAgICBjb25zdCBtYXRjaCA9IGR1cmF0aW9uLm1hdGNoKHJlZ2V4KTtcblxuICAgICAgICBpZiAoIW1hdGNoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGR1cmF0aW9uIGZvcm1hdC4gVXNlIFhkLCBYaCwgb3IgWG0gKFggYmVpbmcgYSBwb3NpdGl2ZSBpbnRlZ2VyKS5cIik7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBxdWFudGl0eSA9IHBhcnNlSW50KG1hdGNoWzFdKTtcbiAgICAgICAgY29uc3QgdW5pdCA9IG1hdGNoWzJdO1xuXG4gICAgICAgIGlmIChpc05hTihxdWFudGl0eSkgfHwgcXVhbnRpdHkgPD0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHF1YW50aXR5IG9mIHRpbWUgbXVzdCBiZSBhIHBvc2l0aXZlIGludGVnZXIuXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZGF0ZUNvcHkgPSBuZXcgRGF0ZShkYXRlLmdldFRpbWUoKSk7XG5cbiAgICAgICAgc3dpdGNoICh1bml0KSB7XG4gICAgICAgICAgICBjYXNlIFwiZFwiOiAvLyBEYXlzXG4gICAgICAgICAgICAgICAgZGF0ZUNvcHkuc2V0RGF0ZShkYXRlQ29weS5nZXREYXRlKCkgKyBxdWFudGl0eSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiaFwiOiAvLyBIb3Vyc1xuICAgICAgICAgICAgICAgIGRhdGVDb3B5LnNldFRpbWUoZGF0ZUNvcHkuZ2V0VGltZSgpICsgcXVhbnRpdHkgKiA2MCAqIDYwICogMTAwMCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibVwiOiAvLyBNaW51dGVzXG4gICAgICAgICAgICAgICAgZGF0ZUNvcHkuc2V0VGltZShkYXRlQ29weS5nZXRUaW1lKCkgKyBxdWFudGl0eSAqIDYwICogMTAwMCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdGltZSB1bml0LiBVc2UgJ2QnICg9IGRheXMpLCAnaCcgKD0gaG91cnMpLCBvciAnbScgKD0gbWludXRlcykuXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGRhdGVDb3B5O1xuICAgIH1cblxuICAgIHN3aXRjaCAodG9vbCkge1xuICAgICAgICBjYXNlIFwibG9jYWxcIjpcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeSh2YWx1ZSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igd2hlbiBoYW5kbGluZyBsb2NhbFN0b3JhZ2UgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIFwic2Vzc2lvblwiOlxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKGtleSwgSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHdoZW4gaGFuZGxpbmcgc2Vzc2lvblN0b3JhZ2UgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIFwiY29va2llXCI6XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxldCBjb29raWUgPSBgJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkodmFsdWUpKX1gO1xuICAgICAgICAgICAgICAgIGNvbnN0IGV4cGlyYXRpb25EYXRlID0gYWRkRHVyYXRpb25Ub0RhdGUobmV3IERhdGUoKSwgbGlmZXRpbWUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1heEFnZUluU2Vjb25kcyA9IE1hdGguZmxvb3IoKGV4cGlyYXRpb25EYXRlIC0gbmV3IERhdGUoKSkgLyAxMDAwKTtcbiAgICAgICAgICAgICAgICBjb29raWUgKz0gYDttYXgtYWdlPSR7bWF4QWdlSW5TZWNvbmRzfWA7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuY29va2llID0gY29va2llO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igd2hlbiBoYW5kbGluZyBjb29raWVzIDpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJUaGlzIHN0b3JhZ2UgdG9vbCB1bmF2YWlsYWJsZSAoY2hlY2sgc3BlbGxpbmcpIDpcIiwgdG9vbCk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuXG4vKipcbiAqIFJldHJpZXZlcyBkYXRhIHN0b3JlZCBpbiB0aGUgdXNlcidzIGRldmljZSAod2l0aCBsb2NhbFN0b3JhZ2UsIHNlc3Npb25TdG9yYWdlLCBvciBjb29raWVzKS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgLSBUaGUga2V5IHRvIGlkZW50aWZ5IHRoZSBkYXRhIHRvIHJldHJpZXZlLlxuICogQHBhcmFtIHtzdHJpbmd9IHRvb2wgLSBUaGUgc3RvcmFnZSB0b29sIHRvIHVzZTogXCJsb2NhbFwiIChtZWFucyBsb2NhbFN0b3JhZ2UpLCBcInNlc3Npb25cIiAobWVhbnMgc2Vzc2lvblN0b3JhZ2UpLCBvciBcImNvb2tpZVwiLlxuICogQHJldHVybnMgeyp9IFRoZSByZXRyaWV2ZWQgZGF0YSBvciBudWxsIGlmIG5vIGRhdGEgaXMgZm91bmQuXG4gKi9cbmZ1bmN0aW9uIGF0dWlLZXJuZWxfU3RvcmFnZUdldChrZXksIHRvb2wpIHtcbiAgICBmdW5jdGlvbiBjb252ZXJ0VG9Mb2dpY2FsVHlwZSh2YWx1ZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodmFsdWUpOyAvLyBJZiB0aGUgdmFsdWUgaXMgYSBkaWN0aW9uYXJ5LCBhbiBhcnJheSwgYSBib29sZWFuLCBhIG51bWJlciwgb3IgbnVsbFxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID09PSBcInVuZGVmaW5lZFwiID8gdW5kZWZpbmVkIDogdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRvb2wpIHtcbiAgICAgICAgY2FzZSBcImxvY2FsXCI6XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhICE9PSBudWxsID8gY29udmVydFRvTG9naWNhbFR5cGUoZGF0YSkgOiBudWxsO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igd2hlbiBoYW5kbGluZyBsb2NhbFN0b3JhZ2UgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJzZXNzaW9uXCI6XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKGtleSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEgIT09IG51bGwgPyBjb252ZXJ0VG9Mb2dpY2FsVHlwZShkYXRhKSA6IG51bGw7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB3aGVuIGhhbmRsaW5nIHNlc3Npb25TdG9yYWdlIDpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIFwiY29va2llXCI6XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvb2tpZXMgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoXCI7XCIpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY29va2llIG9mIGNvb2tpZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgW2Nvb2tpZU5hbWUsIGNvb2tpZVZhbHVlXSA9IGNvb2tpZS5zcGxpdChcIj1cIik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkZWNvZGVVUklDb21wb25lbnQoY29va2llTmFtZS50cmltKCkpID09PSBrZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBkZWNvZGVVUklDb21wb25lbnQoY29va2llVmFsdWUudHJpbSgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb252ZXJ0VG9Mb2dpY2FsVHlwZShkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsgLy8gSWYgbm8gY29va2llIGZvdW5kXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB3aGVuIGhhbmRsaW5nIGNvb2tpZXMgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiVGhpcyBzdG9yYWdlIHRvb2wgdW5hdmFpbGFibGUgKGNoZWNrIHNwZWxsaW5nKSA6XCIsIHRvb2wpO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuXG4vKipcbiAqIFJlbW92ZXMgZGF0YSBzdG9yZWQgaW4gdGhlIHVzZXIncyBkZXZpY2UgKHdpdGggbG9jYWxTdG9yYWdlLCBzZXNzaW9uU3RvcmFnZSwgb3IgY29va2llcykuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gVGhlIGtleSB0byBpZGVudGlmeSB0aGUgZGF0YSB0byByZW1vdmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gdG9vbCAtIFRoZSBzdG9yYWdlIHRvb2wgdG8gdXNlOiBcImxvY2FsXCIgKG1lYW5zIGxvY2FsU3RvcmFnZSksIFwic2Vzc2lvblwiIChtZWFucyBzZXNzaW9uU3RvcmFnZSksIG9yIFwiY29va2llXCIuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyB0cnVlIGlmIHRoZSBkYXRhIHdhcyByZW1vdmVkIHN1Y2Nlc3NmdWxseSwgb3RoZXJ3aXNlIGZhbHNlLlxuICovXG5mdW5jdGlvbiBhdHVpS2VybmVsX1N0b3JhZ2VSZW1vdmUoa2V5LCB0b29sKSB7XG4gICAgc3dpdGNoICh0b29sKSB7XG4gICAgICAgIGNhc2UgXCJsb2NhbFwiOlxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igd2hlbiBoYW5kbGluZyBsb2NhbFN0b3JhZ2UgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIFwic2Vzc2lvblwiOlxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB3aGVuIGhhbmRsaW5nIHNlc3Npb25TdG9yYWdlIDpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgY2FzZSBcImNvb2tpZVwiOlxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5jb29raWUgPSBgJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09OyBleHBpcmVzPVRodSwgMDEgSmFuIDE5NzAgMDA6MDA6MDAgR01UO2A7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB3aGVuIGhhbmRsaW5nIGNvb2tpZXMgOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIlRoaXMgc3RvcmFnZSB0b29sIHVuYXZhaWxhYmxlIChjaGVjayBzcGVsbGluZykgOlwiLCB0b29sKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cbi8qIERpc3BsYXkgbW9kZSAqL1xuXG5mdW5jdGlvbiBhdHVpS2VybmVsX0NvbG9ybW9kZUlzRGFyaygpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtYXR1aS1jb2xvcm1vZGVcIikgPT09IFwiZGFya1wiO1xufVxuXG5mdW5jdGlvbiBhdHVpS2VybmVsX0NvbG9ybW9kZVRvZ2dsZSgpIHtcbiAgICAvKiBUb2dnbGVzIHRoZSBzdGF0dXMgKi9cbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmF0dWlLZXJuZWxfQ29sb3Jtb2RlQnV0dG9uXCIpLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgICAgICBpZiAoYXR1aUtlcm5lbF9Db2xvcm1vZGVJc0RhcmsoKSkge1xuICAgICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNldEF0dHJpYnV0ZShcImRhdGEtYXR1aS1jb2xvcm1vZGVcIiwgXCJsaWdodFwiKTtcbiAgICAgICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QucmVwbGFjZShcInRpLW1vb25cIiwgXCJ0aS1zdW5cIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2V0QXR0cmlidXRlKFwiZGF0YS1hdHVpLWNvbG9ybW9kZVwiLCBcImRhcmtcIik7XG4gICAgICAgICAgICBidXR0b24uY2xhc3NMaXN0LnJlcGxhY2UoXCJ0aS1zdW5cIiwgXCJ0aS1tb29uXCIpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgYXR1aUtlcm5lbF9TdG9yYWdlU2V0KFwiYXR1aUtlcm5lbF9Db2xvcm1vZGVJc0RhcmtcIiwgYXR1aUtlcm5lbF9Db2xvcm1vZGVJc0RhcmsoKSwgXCJsb2NhbFwiKTtcbn1cblxuZnVuY3Rpb24gYXR1aUtlcm5lbF9Db2xvcm1vZGVTdGFydHVwKCkge1xuICAgIGNvbnN0IHN5c3RlbVN0YXR1cyA9IHdpbmRvdy5tYXRjaE1lZGlhICYmIHdpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKS5tYXRjaGVzO1xuICAgIGlmIChzeXN0ZW1TdGF0dXMpIHtcbiAgICAgICAgYXR1aUtlcm5lbF9Db2xvcm1vZGVUb2dnbGUoKTtcbiAgICAgICAgY29uc29sZS5pbmZvKFwiRGFyayBtb2RlIGVuYWJsZWQgYWNjb3JkaW5nIHRvIHRoZSBzeXN0ZW0gcHJlZmVyZW5jZXMuXCIpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBjb25zdCBsb2NhbFN0YXR1cyA9IGF0dWlLZXJuZWxfU3RvcmFnZUdldChcImF0dWlLZXJuZWxfQ29sb3Jtb2RlSXNEYXJrXCIsIFwibG9jYWxcIik7XG4gICAgaWYgKGxvY2FsU3RhdHVzKSB7XG4gICAgICAgIGF0dWlLZXJuZWxfQ29sb3Jtb2RlVG9nZ2xlKCk7XG4gICAgICAgIGNvbnNvbGUuaW5mbyhcIkRhcmsgbW9kZSBlbmFibGVkIGFjY29yZGluZyB0byB0aGUgbWVtb3J5LlwiKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG59XG5hdHVpS2VybmVsX0NvbG9ybW9kZVN0YXJ0dXAoKTtcblxuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5hdHVpS2VybmVsX0NvbG9ybW9kZUJ1dHRvblwiKS5mb3JFYWNoKChidXR0b24pID0+IHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgYXR1aUtlcm5lbF9Db2xvcm1vZGVUb2dnbGUoKTtcbiAgICB9KTtcbn0pO1xuXG4vKiBDb2xvciBhY2NlbnQgKi9cblxuZnVuY3Rpb24gYXR1aUtlcm5lbF9Db2xvcmFjY2VudE1ldGF0YWcoKSB7XG4gICAgbGV0IG1ldGFUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9XCJkYXRhLWF0dWktY29sb3Jtb2RlXCJdJyk7XG4gICAgaWYgKCFtZXRhVGFnKSB7XG4gICAgICAgIG1ldGFUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibWV0YVwiKTtcbiAgICAgICAgbWV0YVRhZy5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwidGhlbWUtY29sb3JcIik7XG4gICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQobWV0YVRhZyk7XG4gICAgfVxuICAgIG1ldGFUYWcuc2V0QXR0cmlidXRlKFxuICAgICAgICBcImNvbnRlbnRcIixcbiAgICAgICAgYGhzbCgke2dldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KS5nZXRQcm9wZXJ0eVZhbHVlKFwiLS1hdHVpS2VybmVsX0NvbG9yLUE0MFwiKX0pYCxcbiAgICApO1xufVxuXG4vKiBQb3AtdXAgKi9cblxuZnVuY3Rpb24gYXR1aUtlcm5lbF9Qb3B1cFNldHVwKGxpc3RlbmVyKSB7XG4gICAgY29uc3QgcG9wdXAgPSBhdHVpS2VybmVsX1Rvb2xzRmluZEVsZW1lbnQobGlzdGVuZXIsIGxpc3RlbmVyLmdldEF0dHJpYnV0ZShcImRhdGEtdmstcG9wdXAtYXNzaWduXCIpKVswXTtcblxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgIHR5cGU6IFwiZGVmYXVsdFwiLFxuICAgICAgICB0cmlnZ2VyRXZlbnQ6IFwibW91c2VvdmVyXCIsXG4gICAgICAgIG91dEV2ZW50OiBcImNsaWNrXCIsXG4gICAgfTtcblxuICAgIGlmIChwb3B1cC5jbGFzc0xpc3QuY29udGFpbnMoXCJhdHVpS2VybmVsX1BvcHVwR2xvYmFscGFuZWxcIikpIHtcbiAgICAgICAgb3B0aW9ucy50eXBlID0gXCJjZW50ZXJlZC1ob3JcIjtcbiAgICB9XG5cbiAgICBpZiAobGlzdGVuZXIuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3B0aW9uUmlnaHRjbGlja1wiKSkge1xuICAgICAgICBvcHRpb25zLnRyaWdnZXJFdmVudCA9IFwiY29udGV4dG1lbnVcIjtcbiAgICB9XG5cbiAgICBsaXN0ZW5lci5hZGRFdmVudExpc3RlbmVyKG9wdGlvbnMudHJpZ2dlckV2ZW50LCAoZXZlbnQpID0+IHtcbiAgICAgICAgLy8gUHJldmVudCBkZWZhdWx0IGNvbnRleHQgbWVudSBvbiByaWdodCBjbGlja1xuICAgICAgICBpZiAob3B0aW9ucy50cmlnZ2VyRXZlbnQgPT09IFwiY29udGV4dG1lbnVcIikge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEhpZGUgYWxsIHBvcHVwc1xuICAgICAgICBkb2N1bWVudFxuICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuYXR1aUtlcm5lbF9Qb3B1cENvbnRleHRtZW51LCAuYXR1aUtlcm5lbF9Qb3B1cFRvb2x0aXAsIC5hdHVpS2VybmVsX1BvcHVwR2xvYmFscGFuZWxcIilcbiAgICAgICAgICAgIC5mb3JFYWNoKChwb3B1cCkgPT4ge1xuICAgICAgICAgICAgICAgIGF0dWlLZXJuZWxfUG9wdXBIaWRlKHBvcHVwKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIGF0dWlLZXJuZWxfUG9wdXBQb3NpdGlvbihsaXN0ZW5lciwgcG9wdXAsIG9wdGlvbnMpO1xuICAgICAgICBhdHVpS2VybmVsX1BvcHVwRGlzcGxheShwb3B1cCk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgYXR1aUtlcm5lbF9Qb3B1cFJlbG9hZCk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIGF0dWlLZXJuZWxfUG9wdXBSZWxvYWQpO1xuXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIob3B0aW9ucy5vdXRFdmVudCwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBkZXRlY3RPdXRzaWRlQ2xpY2soZXZlbnQpO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxuICAgIGZ1bmN0aW9uIGRldGVjdE91dHNpZGVDbGljayhldmVudCkge1xuICAgICAgICBpZiAoIXBvcHVwLmNvbnRhaW5zKGV2ZW50LnRhcmdldCkgJiYgIWxpc3RlbmVyLmNvbnRhaW5zKGV2ZW50LnRhcmdldCkpIHtcbiAgICAgICAgICAgIGF0dWlLZXJuZWxfUG9wdXBIaWRlKHBvcHVwKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGF0dWlLZXJuZWxfUG9wdXBSZWxvYWQoKSB7XG4gICAgICAgIGF0dWlLZXJuZWxfUG9wdXBQb3NpdGlvbihsaXN0ZW5lciwgcG9wdXAsIG9wdGlvbnMpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGF0dWlLZXJuZWxfUG9wdXBIaWRlKHBvcHVwKSB7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgYXR1aUtlcm5lbF9Qb3B1cFJlbG9hZCk7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIGF0dWlLZXJuZWxfUG9wdXBSZWxvYWQpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZGV0ZWN0T3V0c2lkZUNsaWNrKTtcbiAgICAgICAgcG9wdXAuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYXR1aUtlcm5lbF9Qb3B1cERpc3BsYXkocG9wdXApIHtcbiAgICAgICAgcG9wdXAuc3R5bGUudmlzaWJpbGl0eSA9IFwidmlzaWJsZVwiO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGF0dWlLZXJuZWxfUG9wdXBQb3NpdGlvbihsaXN0ZW5lciwgcG9wdXAsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgZ2FwID0gNTtcblxuICAgICAgICAvLyBUaGUgdGVtcG9yYXJ5IHBvc2l0aW9uIGF0IDAgaXMgdmVyeSBpbXBvcnRhbnQgdG8gZ2V0IHRoZSBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKSBwb3NpdGlvbiBhdCAwcHg7MHB4IGFuZCB0aHVzIGtub3cgdGhlIHNoaWZ0LlxuICAgICAgICBwb3B1cC5zdHlsZS5sZWZ0ID0gXCIwXCI7XG4gICAgICAgIHBvcHVwLnN0eWxlLnRvcCA9IFwiMFwiO1xuXG4gICAgICAgIC8vIFRoZSB2YXJpYWJsZXMgd2luZG93RGltZW5zaW9ucywgbGlzdGVuZXJQb3NpdGlvbiBhbmQgcG9wdXBQb3NpdGlvbiBoYXZlIGJlZW4gbWFkZSB0byBmYWNpbGl0YXRlIHRoZSByZWFkaW5nIG9mIHRoZSBjb2RlLlxuICAgICAgICBjb25zdCB3aW5kb3dEaW1lbnNpb25zID0ge1xuICAgICAgICAgICAgd2lkdGg6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCxcbiAgICAgICAgICAgIGhlaWdodDogZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCxcbiAgICAgICAgfTtcbiAgICAgICAgLy8gU2NoZW1hIG9mIGdldEJvdW5kaW5nQ2xpZW50UmVjdCgpIDogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0VsZW1lbnQvZ2V0Qm91bmRpbmdDbGllbnRSZWN0I3JldHVybl92YWx1ZVxuICAgICAgICBjb25zdCBsaXN0ZW5lclBvc2l0aW9uID0gbGlzdGVuZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIGNvbnN0IHBvcHVwUG9zaXRpb24gPSBwb3B1cC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgICBjb25zdCBvdmVyZmxvd1JpZ2h0ID0gbGlzdGVuZXJQb3NpdGlvbi5sZWZ0ICsgcG9wdXBQb3NpdGlvbi53aWR0aCA+IHdpbmRvd0RpbWVuc2lvbnMud2lkdGg7XG4gICAgICAgIGNvbnN0IG92ZXJmbG93Qm90dG9tID0gbGlzdGVuZXJQb3NpdGlvbi50b3AgKyBwb3B1cFBvc2l0aW9uLmhlaWdodCA+IHdpbmRvd0RpbWVuc2lvbnMuaGVpZ2h0O1xuXG4gICAgICAgIGNvbnN0IGNhbGN1bGF0ZWRQb3NpdGlvbiA9IHtcbiAgICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKG9wdGlvbnMudHlwZSA9PT0gXCJjZW50ZXJlZFwiIHx8IG9wdGlvbnMudHlwZSA9PT0gXCJjZW50ZXJlZC1ob3JcIikge1xuICAgICAgICAgICAgY2FsY3VsYXRlZFBvc2l0aW9uLmxlZnQgPSAod2luZG93RGltZW5zaW9ucy53aWR0aCAtIHBvcHVwUG9zaXRpb24ud2lkdGgpIC8gMjtcbiAgICAgICAgfSBlbHNlIGlmIChvdmVyZmxvd1JpZ2h0KSB7XG4gICAgICAgICAgICBjYWxjdWxhdGVkUG9zaXRpb24ubGVmdCA9IGxpc3RlbmVyUG9zaXRpb24ucmlnaHQgLSBwb3B1cFBvc2l0aW9uLmxlZnQgLSBwb3B1cFBvc2l0aW9uLndpZHRoIC0gZ2FwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FsY3VsYXRlZFBvc2l0aW9uLmxlZnQgPSBsaXN0ZW5lclBvc2l0aW9uLmxlZnQgLSBwb3B1cFBvc2l0aW9uLmxlZnQgKyBnYXA7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAob3B0aW9ucy50eXBlID09PSBcImNlbnRlcmVkXCIgfHwgb3B0aW9ucy50eXBlID09PSBcImNlbnRlcmVkLXZlclwiKSB7XG4gICAgICAgICAgICBjYWxjdWxhdGVkUG9zaXRpb24udG9wID0gKHdpbmRvd0RpbWVuc2lvbnMuaGVpZ2h0IC0gcG9wdXBQb3NpdGlvbi5oZWlnaHQpIC8gMjtcbiAgICAgICAgfSBlbHNlIGlmIChvdmVyZmxvd0JvdHRvbSkge1xuICAgICAgICAgICAgY2FsY3VsYXRlZFBvc2l0aW9uLnRvcCA9IGxpc3RlbmVyUG9zaXRpb24udG9wIC0gcG9wdXBQb3NpdGlvbi50b3AgLSBwb3B1cFBvc2l0aW9uLmhlaWdodCArIGdhcDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhbGN1bGF0ZWRQb3NpdGlvbi50b3AgPSBsaXN0ZW5lclBvc2l0aW9uLmJvdHRvbSAtIHBvcHVwUG9zaXRpb24udG9wIC0gZ2FwO1xuICAgICAgICB9XG5cbiAgICAgICAgcG9wdXAuc3R5bGUubGVmdCA9IGNhbGN1bGF0ZWRQb3NpdGlvbi5sZWZ0ICsgXCJweFwiO1xuICAgICAgICBwb3B1cC5zdHlsZS50b3AgPSBjYWxjdWxhdGVkUG9zaXRpb24udG9wICsgXCJweFwiO1xuICAgIH1cbn1cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS12ay1wb3B1cC1hc3NpZ25dXCIpLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgYXR1aUtlcm5lbF9Qb3B1cFNldHVwKGxpc3RlbmVyKTtcbn0pO1xuXG4vKiBOb3RpZmljYXRpb25zICovXG5cbmZ1bmN0aW9uIGF0dWlLZXJuZWxfTm90aWZpY2F0aW9uUHVzaChvcHRpb25zKSB7XG4gICAgZnVuY3Rpb24gc3lzdGVtUHVzaCgpIHtcbiAgICAgICAgY29uc3Qgbm90aWZpY2F0aW9uID0gbmV3IE5vdGlmaWNhdGlvbihvcHRpb25zLnRpdGxlLCB7XG4gICAgICAgICAgICBib2R5OiBvcHRpb25zLnRleHQgfHwgXCJcIixcbiAgICAgICAgICAgIGljb246IG9wdGlvbnMuaW1hZ2VcbiAgICAgICAgICAgICAgICA/IG9wdGlvbnMuaW1hZ2VcbiAgICAgICAgICAgICAgICA6IG9wdGlvbnMuaWNvblxuICAgICAgICAgICAgICAgID8gYGh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vQHRhYmxlci9pY29ucy9pY29ucy8ke29wdGlvbnMuaWNvbn0uc3ZnYFxuICAgICAgICAgICAgICAgIDogXCJcIixcbiAgICAgICAgfSk7XG4gICAgICAgIG5vdGlmaWNhdGlvbi5vbmNsaWNrID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5saW5rICYmIG9wdGlvbnMubGluayAhPT0gXCJcIikge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4ob3B0aW9ucy5saW5rKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnRlcm5QdXNoKCkge1xuICAgICAgICAvLyBDcmVhdGUgdGhlIG5vdGlmaWNhdGlvbiBlbGVtZW50XG4gICAgICAgIGNvbnN0IG5vdGlmaWNhdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIG5vdGlmaWNhdGlvbi5jbGFzc0xpc3QuYWRkKFwiYXR1aUtlcm5lbF9Ob3RpZmljYXRpb25cIik7XG4gICAgICAgIGlmIChvcHRpb25zLnR5cGUgPT09IFwiYXR1aS1taW5pXCIpIG5vdGlmaWNhdGlvbi5jbGFzc0xpc3QuYWRkKFwib3B0aW9uTWluaVwiKTtcblxuICAgICAgICAvLyBDcmVhdGUgdGhlIGljb24gZWxlbWVudCBpbiB0aGUgaGVhZGVyXG4gICAgICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoZWFkZXJcIik7XG4gICAgICAgIGxldCBpY29uO1xuICAgICAgICBpZiAob3B0aW9ucy5pbWFnZSB8fCBvcHRpb25zLmljb24pIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLmltYWdlKSB7XG4gICAgICAgICAgICAgICAgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgICAgICAgICAgICAgaWNvbi5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgb3B0aW9ucy5pbWFnZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG9wdGlvbnMuaWNvbikge1xuICAgICAgICAgICAgICAgIGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaVwiKTtcbiAgICAgICAgICAgICAgICBpY29uLmNsYXNzTGlzdC5hZGQoXCJ0aVwiLCBgdGktJHtvcHRpb25zLmljb259YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoZWFkZXIuYXBwZW5kQ2hpbGQoaWNvbik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDcmVhdGUgdGhlIHRpdGxlIGVsZW1lbnQgaW4gdGhlIGhlYWRlclxuICAgICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICB0aXRsZS50ZXh0Q29udGVudCA9IG9wdGlvbnMudHlwZSA9PT0gXCJhdHVpLW1pbmlcIiA/IG9wdGlvbnMudGV4dCA6IG9wdGlvbnMudGl0bGU7XG4gICAgICAgIGhlYWRlci5hcHBlbmRDaGlsZCh0aXRsZSk7XG5cbiAgICAgICAgbm90aWZpY2F0aW9uLmFwcGVuZENoaWxkKGhlYWRlcik7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMudHlwZSAhPT0gXCJhdHVpLW1pbmlcIikge1xuICAgICAgICAgICAgLy8gQ3JlYXRlIHRoZSBzZWN0aW9uIGVsZW1lbnRcbiAgICAgICAgICAgIGNvbnN0IHNlY3Rpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VjdGlvblwiKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICAgICAgICAgIGNvbnRlbnQuaW5uZXJIVE1MID0gb3B0aW9ucy50ZXh0O1xuICAgICAgICAgICAgc2VjdGlvbi5hcHBlbmRDaGlsZChjb250ZW50KTtcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5hcHBlbmRDaGlsZChzZWN0aW9uKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENyZWF0ZSB0aGUgZm9vdGVyIGVsZW1lbnRcbiAgICAgICAgY29uc3QgZm9vdGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvb3RlclwiKTtcbiAgICAgICAgb3B0aW9ucy5idXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgICAgICAgICAgY29uc3QgYnV0dG9uRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJhdHVpS2VybmVsX0J1dHRvblwiLCBcIm9wdGlvbkFjY2VudFwiKTtcbiAgICAgICAgICAgIGlmIChidXR0b24ub3B0aW9uICYmIGJ1dHRvbi5vcHRpb24gIT09IFwiXCIpIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChgb3B0aW9uJHtidXR0b24ub3B0aW9ufWApO1xuICAgICAgICAgICAgY29uc3QgYnV0dG9uVGV4dEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICAgICAgICAgIGJ1dHRvblRleHRFbGVtZW50LnRleHRDb250ZW50ID0gYnV0dG9uLnRleHQ7XG4gICAgICAgICAgICBidXR0b25FbGVtZW50LmFwcGVuZENoaWxkKGJ1dHRvblRleHRFbGVtZW50KTtcbiAgICAgICAgICAgIGJ1dHRvbkVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBidXR0b24uYWN0aW9uKCk7XG4gICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uLnJlbW92ZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBmb290ZXIuYXBwZW5kQ2hpbGQoYnV0dG9uRWxlbWVudCk7XG4gICAgICAgIH0pO1xuICAgICAgICBub3RpZmljYXRpb24uYXBwZW5kQ2hpbGQoZm9vdGVyKTtcblxuICAgICAgICAvLyBEaXNwbGF5IHRoZSBub3RpZmljYXRpb25cbiAgICAgICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYXR1aUtlcm5lbF9Ob3RpZmljYXRpb25Db250YWluZXJcIik7XG4gICAgICAgIGlmICghY29udGFpbmVyKSB7XG4gICAgICAgICAgICBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJhdHVpS2VybmVsX05vdGlmaWNhdGlvbkNvbnRhaW5lclwiKTtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcbiAgICAgICAgfVxuICAgICAgICBjb250YWluZXIuaW5zZXJ0QmVmb3JlKG5vdGlmaWNhdGlvbiwgY29udGFpbmVyLmZpcnN0Q2hpbGQpO1xuXG4gICAgICAgIGlmIChvcHRpb25zLmNsb3NlICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgbGV0IG1vdXNlT3ZlciA9IGZhbHNlO1xuICAgICAgICAgICAgbm90aWZpY2F0aW9uLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBtb3VzZU92ZXIgPSB0cnVlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBub3RpZmljYXRpb24uYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIG1vdXNlT3ZlciA9IGZhbHNlO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChtb3VzZU92ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIDIwMDApO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb24ucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgb3B0aW9ucy5jbG9zZSB8fCA1MDAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGZ1bmN0aW9uIHZlcmlmeVBlcm1pc3Npb24oKSB7XG4gICAgICAgIGlmIChOb3RpZmljYXRpb24ucGVybWlzc2lvbiA9PT0gXCJncmFudGVkXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYXdhaXQgTm90aWZpY2F0aW9uLnJlcXVlc3RQZXJtaXNzaW9uKCk7XG4gICAgICAgICAgICBpZiAoTm90aWZpY2F0aW9uLnBlcm1pc3Npb24gPT09IFwiZ3JhbnRlZFwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHZlcmlmeVBlcm1pc3Npb24oKS50aGVuKChwZXJtaXNzaW9uKSA9PiB7XG4gICAgICAgIC8vIEVuc3VyZSBub3RpZmljYXRpb24gcGVybWlzc2lvbiBpcyBncmFudGVkXG4gICAgICAgIGlmICghcGVybWlzc2lvbikge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoXCJOb3RpZmljYXRpb24gY2Fubm90IGJlIGRpc3BsYXllZCBiZWNhdXNlIHBlcm1pc3Npb24gaGFzIGJlZW4gZGVuaWVkLlwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEFzc2VydCBub3RpZmljYXRpb24gb3B0aW9uc1xuICAgICAgICBpZiAoKCFvcHRpb25zLnRpdGxlIHx8IG9wdGlvbnMudGl0bGUgPT09IFwiXCIpICYmIG9wdGlvbnMudHlwZSAhPT0gXCJhdHVpLW1pbmlcIikge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoXCJOb3RpZmljYXRpb24gc2hvdWxkIGhhdmUgYSB0aXRsZS5cIik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEaXNwbGF5IHRoZSBub3RpZmljYXRpb25cbiAgICAgICAgaWYgKG9wdGlvbnMudHlwZSA9PT0gXCJzeXN0ZW1cIikge1xuICAgICAgICAgICAgc3lzdGVtUHVzaCgpO1xuICAgICAgICB9IGVsc2UgaWYgKG9wdGlvbnMudHlwZS5zdGFydHNXaXRoKFwiYXR1aVwiKSkge1xuICAgICAgICAgICAgaW50ZXJuUHVzaCgpO1xuICAgICAgICAgICAgaWYgKCEoXCJzb3VuZFwiIGluIG9wdGlvbnMpKSB7XG4gICAgICAgICAgICAgICAgLy8gRGVmYXVsdCBzb3VuZFxuICAgICAgICAgICAgICAgIGNvbnN0IHNvdW5kID0gbmV3IEF1ZGlvKGF0dWlLZXJuZWxfTm90aWZpY2F0aW9uU291bmQpO1xuICAgICAgICAgICAgICAgIHNvdW5kLnBsYXkoKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAob3B0aW9ucy5zb3VuZCkge1xuICAgICAgICAgICAgICAgIC8vIEN1c3RvbSBzcGVjaWZpYyBzb3VuZFxuICAgICAgICAgICAgICAgIGNvbnN0IHNvdW5kID0gbmV3IEF1ZGlvKG9wdGlvbnMuc291bmQpO1xuICAgICAgICAgICAgICAgIHNvdW5kLnBsYXkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYE5vdGlmaWNhdGlvbiB0eXBlICR7b3B0aW9ucy50eXBlfSBkb2Vzbid0IGV4aXN0LmApO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5sZXQgYXR1aUtlcm5lbF9Ob3RpZmljYXRpb25Tb3VuZCA9IFwiYXR1aS9rZXJuZWwvYXNzZXRzL25vdGlmaWNhdGlvbi5tcDNcIjsgLyogZXNsaW50LWRpc2FibGUtbGluZSBwcmVmZXItY29uc3QgKi9cblxuLyogQ2Fyb3VzZWwgKi9cblxuLy8gSGVpZ2h0IHN1cGVycG9zaXRpb24gYmV0d2VlbiBoZWFkZXIgYW5kIGNhcm91c2VsXG5cbmNvbnN0IGF0dWlLZXJuZWxfSGVhZGVyRml4Q2Fyb3VzZWwgPSAoKSA9PiB7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5hdHVpS2VybmVsX0hlYWRlci5vcHRpb25DYXJvdXNlbFwiKS5mb3JFYWNoKChoZWFkZXIpID0+IHtcbiAgICAgICAgY29uc3QgY2Fyb3VzZWwgPSBhdHVpS2VybmVsX1Rvb2xzRmluZEVsZW1lbnQoaGVhZGVyLCBcIi5hdHVpS2VybmVsX0Nhcm91c2VsXCIsIFwiLmF0dWlLZXJuZWxfQm9keUNvbnRlbnRcIilbMF07XG4gICAgICAgIGNvbnN0IGNhcm91c2VsQ29udGVudCA9IGF0dWlLZXJuZWxfVG9vbHNGaW5kRWxlbWVudChcbiAgICAgICAgICAgIGNhcm91c2VsLFxuICAgICAgICAgICAgXCIuYXR1aUtlcm5lbF9DYXJvdXNlbFNsaWRlcyA+IGRpdiA+IGRpdlwiLFxuICAgICAgICAgICAgXCIuYXR1aUtlcm5lbF9DYXJvdXNlbFwiLFxuICAgICAgICApO1xuICAgICAgICBjb25zdCBjYXJvdXNlbENvbnRyb2xzID0gY2Fyb3VzZWwucXVlcnlTZWxlY3RvcihcIi5hdHVpS2VybmVsX0Nhcm91c2VsQ29udHJvbHNcIik7XG5cbiAgICAgICAgY2Fyb3VzZWwuc3R5bGUubWluSGVpZ2h0ID0gaGVhZGVyLm9mZnNldEhlaWdodCAqIDIgKyBcInB4XCI7XG4gICAgICAgIGNhcm91c2VsQ29udGVudC5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICAgICAgICBlbGVtZW50LnN0eWxlLnBhZGRpbmdUb3AgPSBoZWFkZXIub2Zmc2V0SGVpZ2h0ICsgMjAgKyBcInB4XCI7XG4gICAgICAgIH0pO1xuICAgICAgICBjYXJvdXNlbENvbnRyb2xzLnN0eWxlLm1hcmdpblRvcCA9IGhlYWRlci5vZmZzZXRIZWlnaHQgKyBcInB4XCI7XG4gICAgfSk7XG59O1xuYXR1aUtlcm5lbF9IZWFkZXJGaXhDYXJvdXNlbCgpO1xud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgYXR1aUtlcm5lbF9IZWFkZXJGaXhDYXJvdXNlbCk7XG5cbi8vIENvbnRyb2xzXG5cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuYXR1aUtlcm5lbF9DYXJvdXNlbFwiKS5mb3JFYWNoKChjYXJvdXNlbCkgPT4ge1xuICAgIGNvbnN0IHNsaWRlc0NvbnRhaW5lciA9IGNhcm91c2VsLnF1ZXJ5U2VsZWN0b3IoXCIuYXR1aUtlcm5lbF9DYXJvdXNlbFNsaWRlc1wiKTtcbiAgICBjb25zdCBjb250cm9scyA9IGNhcm91c2VsLnF1ZXJ5U2VsZWN0b3IoXCIuYXR1aUtlcm5lbF9DYXJvdXNlbENvbnRyb2xzXCIpO1xuICAgIGNvbnN0IGNvbnRyb2xzTGVmdCA9IGNvbnRyb2xzPy5xdWVyeVNlbGVjdG9yKFwiLmF0dWlLZXJuZWxfQ2Fyb3VzZWxDb250cm9sc0xlZnRcIik7XG4gICAgY29uc3QgY29udHJvbHNSaWdodCA9IGNvbnRyb2xzPy5xdWVyeVNlbGVjdG9yKFwiLmF0dWlLZXJuZWxfQ2Fyb3VzZWxDb250cm9sc1JpZ2h0XCIpO1xuICAgIGNvbnRyb2xzTGVmdD8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgc2xpZGVzQ29udGFpbmVyLnNjcm9sbEJ5KHtcbiAgICAgICAgICAgIGxlZnQ6IC1zbGlkZXNDb250YWluZXIub2Zmc2V0V2lkdGgsXG4gICAgICAgICAgICBiZWhhdmlvcjogXCJzbW9vdGhcIixcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgY29udHJvbHNSaWdodD8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgc2xpZGVzQ29udGFpbmVyLnNjcm9sbEJ5KHtcbiAgICAgICAgICAgIGxlZnQ6IHNsaWRlc0NvbnRhaW5lci5vZmZzZXRXaWR0aCxcbiAgICAgICAgICAgIGJlaGF2aW9yOiBcInNtb290aFwiLFxuICAgICAgICB9KTtcbiAgICB9KTtcbn0pO1xuXG4vKiBNb2RhbCAqL1xuXG5mdW5jdGlvbiBhdHVpS2VybmVsX01vZGFsU2hvdyhtb2RhbElkKSB7XG4gICAgY29uc3QgbW9kYWxCYWNrZ3JvdW5kID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobW9kYWxJZCk7XG4gICAgbW9kYWxCYWNrZ3JvdW5kLmNsYXNzTGlzdC5hZGQoXCJvcHRpb25TaG93XCIpO1xuXG4gICAgZnVuY3Rpb24gaGFuZGxlQ2xpY2tPdXRzaWRlTW9kYWwoZXZlbnQpIHtcbiAgICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gbW9kYWxCYWNrZ3JvdW5kKSB7XG4gICAgICAgICAgICBtb2RhbEJhY2tncm91bmQuY2xhc3NMaXN0LnJlbW92ZShcIm9wdGlvblNob3dcIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlQ2xpY2tPdXRzaWRlTW9kYWwpO1xufVxuXG4vKiBUYWJzICovXG5cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuYXR1aUtlcm5lbF9TZWN0aW9uVGFic1wiKS5mb3JFYWNoKCh0YWJzQ29udGFpbmVyKSA9PiB7XG4gICAgY29uc3QgdGFic0hlYWRlciA9IHRhYnNDb250YWluZXIucXVlcnlTZWxlY3RvcihcIi5hdHVpS2VybmVsX1NlY3Rpb25UYWJzSGVhZGVyXCIpO1xuICAgIGNvbnN0IHRhYnNIZWFkZXJMaW5rcyA9IHRhYnNIZWFkZXIucXVlcnlTZWxlY3RvckFsbChcImFcIik7XG4gICAgY29uc3QgdGFic0NvbnRlbnQgPSB0YWJzQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoXCIuYXR1aUtlcm5lbF9TZWN0aW9uVGFic0NvbnRlbnRcIik7XG4gICAgY29uc3QgdGFic0NvbnRlbnRUZXh0cyA9IHRhYnNDb250ZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJkaXZcIik7XG5cbiAgICB0YWJzSGVhZGVyTGlua3MuZm9yRWFjaCgobGluaykgPT4ge1xuICAgICAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICB0YWJzSGVhZGVyTGlua3MuZm9yRWFjaCgodGFiKSA9PiB7XG4gICAgICAgICAgICAgICAgdGFiLmNsYXNzTGlzdC5yZW1vdmUoXCJvcHRpb25BY3RpdmVcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRhYnNDb250ZW50VGV4dHMuZm9yRWFjaCgoY29udGVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQuY2xhc3NMaXN0LnJlbW92ZShcIm9wdGlvbkFjdGl2ZVwiKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBsaW5rLmNsYXNzTGlzdC5hZGQoXCJvcHRpb25BY3RpdmVcIik7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChsaW5rLmdldEF0dHJpYnV0ZShcImRhdGEtdGFicy1hc3NpZ25cIikpLmNsYXNzTGlzdC5hZGQoXCJvcHRpb25BY3RpdmVcIik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG5cbi8qIEFjY29yZGlvbiAqL1xuXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmF0dWlLZXJuZWxfU2VjdGlvbkFjY29yZGlvblwiKS5mb3JFYWNoKChhY2NvcmRpb24pID0+IHtcbiAgICBjb25zdCBoZWFkZXIgPSBhY2NvcmRpb24ucXVlcnlTZWxlY3RvcihcImhlYWRlclwiKTtcbiAgICBjb25zdCBidXR0b24gPSBoZWFkZXIucXVlcnlTZWxlY3RvcihcImlcIik7XG4gICAgY29uc3QgY29udGVudCA9IGFjY29yZGlvbi5xdWVyeVNlbGVjdG9yKFwic2VjdGlvblwiKTtcbiAgICBoZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgaWYgKHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGNvbnRlbnQpLmRpc3BsYXkgPT09IFwibm9uZVwiKSB7XG4gICAgICAgICAgICBjb250ZW50LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgICAgICBidXR0b24uc3R5bGUudHJhbnNmb3JtID0gXCJyb3RhdGUoMTgwZGVnKVwiO1xuICAgICAgICB9IGVsc2UgaWYgKHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGNvbnRlbnQpLmRpc3BsYXkgPT09IFwiYmxvY2tcIikge1xuICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICBidXR0b24uc3R5bGUudHJhbnNmb3JtID0gXCJyb3RhdGUoMGRlZylcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJBbiB1bmV4cGVjdGVkIGVycm9yIGhhcyBvY2N1cnJlZC5cIik7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pO1xuXG4vKiBTY3JvbGx0b3AgKi9cblxuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5hdHVpS2VybmVsX1Njcm9sbHRvcFwiKS5mb3JFYWNoKChidXR0b24pID0+IHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgd2luZG93LnNjcm9sbFRvKHtcbiAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCAoKSA9PiB7XG4gICAgICAgIGlmICh3aW5kb3cuc2Nyb2xsWSA+IHdpbmRvdy5pbm5lckhlaWdodCkge1xuICAgICAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJvcHRpb25BY3RpdmVcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBidXR0b24uY2xhc3NMaXN0LnJlbW92ZShcIm9wdGlvbkFjdGl2ZVwiKTtcbiAgICAgICAgfVxuICAgIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiJhQU9BLEtBQU0sQ0FBQUEsa0JBQWtCLENBQUcsT0FBTyxDQUVsQ0MsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDQyxPQUFPLENBQUVDLENBQUksRUFBSyxDQUNyRUEsQ0FBSSxDQUFDQyxZQUFZ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