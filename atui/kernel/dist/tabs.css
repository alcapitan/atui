/*!
 * ATUI v0.4.0 (https://github.com/alcapitan/atui)
 * This code is released under GNU General Public License (https://github.com/alcapitan/atui/blob/dev/LICENSE.md)
 */

/* Global */

.atuiKernel_SectionTabs {
    border-radius: var(--atuiKernel_Borderradius);
    overflow: hidden;
}

/* Header */

.atuiKernel_SectionTabsHeader {
    display: flex;
    flex-wrap: wrap;
    padding-bottom: 5px;
}

.atuiKernel_SectionTabsHeader > a {
    padding: 15px;
    position: relative;
}

.atuiKernel_SectionTabsHeader > a * {
    margin: 0;
    color: inherit;
    font-family: var(--atuiKernel_FontsTitle);
    font-size: 1.125rem;
}

.atuiKernel_SectionTabsHeader .optionActive {
    font-weight: bold;
}

.atuiKernel_SectionTabs .atuiKernel_SectionTabsHeader > *:hover,
.atuiKernel_SectionTabs .atuiKernel_SectionTabsHeader .optionActive * {
    color: hsl(var(--atuiKernel_Color-Accent-Surface));
    -webkit-text-decoration: none;
    text-decoration: none;
}

.atuiKernel_SectionTabs .atuiKernel_SectionTabsHeader .optionActive::after {
    content: "";
    width: calc(100% - 30px);
    height: 5px;
    background-color: hsl(var(--atuiKernel_Color-Accent-Surface));
    position: absolute;
    border-radius: 5px;
    transform: translateY(10px);
}

/* Content */

.atuiKernel_SectionTabsContent {
    padding: 15px;
}

.atuiKernel_SectionTabsContent div {
    display: none;
}

.atuiKernel_SectionTabsContent .optionActive {
    display: block;
}

/* Contrast style */

.atuiKernel_SectionTabs.optionContrast .atuiKernel_SectionTabsHeader {
    background-color: hsl(var(--atuiKernel_Color-Neutral-Surface-Container-High));
    border-bottom: 1px hsl(var(--atuiKernel_Color-Neutral-Outline-Dim)) solid;
    padding: 0 10px;
}

.atuiKernel_SectionTabs.optionContrast .atuiKernel_SectionTabsContent {
    background-color: hsl(var(--atuiKernel_Color-Neutral-Surface-Container));
}

.atuiKernel_SectionTabs.optionContrast .atuiKernel_SectionTabsHeader > *:hover,
.atuiKernel_SectionTabs.optionContrast .atuiKernel_SectionTabsHeader .optionActive * {
    color: hsl(var(--atuiKernel_Color-Neutral-On-Surface));
}

.atuiKernel_SectionTabs.optionContrast .atuiKernel_SectionTabsHeader .optionActive::after {
    all: unset;
}
